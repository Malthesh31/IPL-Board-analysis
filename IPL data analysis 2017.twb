<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top B' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range granularity='5' max='30' min='5' />
      </column>
      <column caption='top bo' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Parameter 3' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
    </datasource>
    <datasource caption='deliveries.csv+ (Multiple Connections)' inline='true' name='federated.19s4xvy1mwth47178cup10f3ie4o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.0j5hkjk0dqdhnc17ahgha0x0aegb'>
            <connection class='textscan' directory='C:/Users/MALTHESH/Downloads' filename='deliveries.csv' password='' server='' />
          </named-connection>
          <named-connection caption='matches' name='textscan.19t888f1agdp5911emaj51tkw4ib'>
            <connection class='textscan' directory='C:/Users/MALTHESH/Downloads' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[deliveries.csv].[match_id]' />
              <expression op='[matches.csv].[id]' />
            </expression>
          </clause>
          <relation connection='textscan.0j5hkjk0dqdhnc17ahgha0x0aegb' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
              <column datatype='string' name='Bowler type' ordinal='21' />
              <column datatype='string' name='Over type' ordinal='22' />
            </columns>
          </relation>
          <relation connection='textscan.19t888f1agdp5911emaj51tkw4ib' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='integer' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
              <column datatype='integer' name='Match_winner' ordinal='18' />
              <column datatype='string' name='Ground score' ordinal='19' />
              <column datatype='string' name='F21' ordinal='20' />
              <column datatype='string' name='Sunrisers Hyderabad' ordinal='21' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bowler type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bowler type]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>Bowler type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Over type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Over type]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>Over type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_winner</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Match_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>Match_winner</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ground score</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ground score]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>Ground score</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F21</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F21]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>F21</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sunrisers Hyderabad</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sunrisers Hyderabad]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>Sunrisers Hyderabad</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column datatype='string' name='[batting_team (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[batting_team]' new-bin='true'>
          <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
            <value>&quot;Deccan Chargers&quot;</value>
            <value>&quot;Sunrisers Hyderabad&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column datatype='string' name='[toss_winner (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[toss_winner]' new-bin='true'>
          <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
            <value>&quot;Deccan Chargers&quot;</value>
            <value>&quot;Sunrisers Hyderabad&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column datatype='string' name='[winner (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[winner]' new-bin='true'>
          <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
            <value>&quot;Deccan Chargers&quot;</value>
            <value>&quot;Sunrisers Hyderabad&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
      <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
      <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.582418' measure-ordering='alphabetic' measure-percentage='0.279121' parameter-percentage='0.138462' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:batsman:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Mukund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BB Samantray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CJ Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DH Yagnik&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IR Jaggi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NS Naik&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PR Shah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AC Blizzard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA Pujara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DR Martyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P Dogra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ER Dwivedi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kamran Akmal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Rawat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AR Bawne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DT Patil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harpreet Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MJ Guptill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MS Wade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SW Billings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UT Khawaja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;X Thalaivan Sargunam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DB Das&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;M Kaif&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salman Butt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;U Kaul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MN van Wyk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RS Sodhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AN Ghosh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ishan Kishan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MC Juneja&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSP Handscomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VVS Laxman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LA Pomersbach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SP Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vishnu Vinod&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Younis Khan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;H Das&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Bishnoi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Chanderpaul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UA Birla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AS Yadav&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BJ Haddin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJ Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;F Behardien&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T Kohli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Bilakhia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AG Paunikar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CM Gautam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;L Ronchi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niraj Patel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RR Rossouw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SP Fleming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T Taibu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yashpal Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BR Dunk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TD Paine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AB Barath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C Madan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DM Bravo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JJ Roy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mohammad Ashraful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RT Ponting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YV Takawale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AD Nath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PA Reddy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AP Majumdar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DS Lehmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M Klinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Misbah-ul-Haq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RJ Quiney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunny Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UBT Chand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Chopra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anirudh Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Sumanth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA Ingram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J Arunkumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OA Shah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SS Shaikh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TM Srivastava&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KB Arun Karthik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NJ Maddinson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RR Sarwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VH Zol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KL Rahul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MDKJ Perera&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SS Tiwary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TR Birt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W Jaffer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:toss_decision:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2008</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2012</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2011</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>2016</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2014</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2010</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2009</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_of_match:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HH Gibbs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KC Sangakkara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KK Nair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SS Iyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;G Gambhir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MK Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AB de Villiers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NV Ojha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RE Levi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SE Marsh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KM Jadhav&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DA Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Badrinath&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AT Rayudu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KD Karthik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Vohra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Sohal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GJ Bailey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Anirudha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SM Katich&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WP Saha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MD Mishra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MV Boucher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SV Samson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GC Smith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PA Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RR Pant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ML Hayden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AP Tare&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DA Warner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Q de Kock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SP Goswami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EJG Morgan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Buttler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MJ Lumb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BB McCullum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DPMD Jayawardene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MEK Hussey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HM Amla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MA Agarwal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MS Bisla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R Dravid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RV Uthappa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CA Lynn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MS Dhoni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SA Asnodkar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloemfontein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East London&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dharamsala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowler:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Nel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JW Hastings&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MB Parmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RW Price&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MG Neser&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B Geeves&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Avesh Khan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RR Bose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P Prasanth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anand Rajan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P Amarnath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RA Shaikh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tejas Baroka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B Stanlake&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GS Sandhu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SS Agarwal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AM Salvi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MJ Henry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SS Mundhe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harmeet Singh (2)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NB Singh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C Ganapathy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gagandeep Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T Natarajan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AA Kazi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SS Sarkar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;K Santokie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TP Sudhindra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P Suyal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SM Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T Shamsi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bat first advantage '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Bat first advantage </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[batting_team (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[batting_team]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[id]' derivation='CountD' name='[pcto:ctd:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[batting_team (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[batting_team (group)]' member='&quot;Gujarat Lions&quot;' />
                <groupfilter function='member' level='[batting_team (group)]' member='&quot;Kochi Tuskers Kerala&quot;' />
                <groupfilter function='member' level='[batting_team (group)]' member='&quot;Pune Warriors&quot;' />
                <groupfilter function='member' level='[batting_team (group)]' member='&quot;Rising Pune Supergiant&quot;' />
                <groupfilter function='member' level='[batting_team (group)]' member='&quot;Rising Pune Supergiants&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[winner (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[winner (group)]' member='%null%' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Gujarat Lions&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Kochi Tuskers Kerala&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Pune Warriors&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Rising Pune Supergiant&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Rising Pune Supergiants&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</cols>
      </table>
      <simple-id uuid='{55C124D4-BE3C-4CCD-9DDB-53CAA135E288}' />
    </worksheet>
    <worksheet name='Bowler stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Bowler stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='Count' name='[cnt:dismissal_kind:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk]</cols>
      </table>
      <simple-id uuid='{9FBBC4A8-1F94-4F6A-81DD-5F5CFE204192}' />
    </worksheet>
    <worksheet name='Leading batsmen'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Leading batsmen</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top B' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range granularity='5' max='30' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]</cols>
      </table>
      <simple-id uuid='{F3A89369-E569-45C7-B413-F80FF46912F0}' />
    </worksheet>
    <worksheet name='Match venue'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black'>Match venue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[Longitude (generated)]' field-type='quantitative' max='10200598.81985929' min='1697395.7957310025' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[Latitude (generated)]' field-type='quantitative' max='3647689.6737421704' min='-1259214.1438071271' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' />
              <size column='[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' />
              <lod column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[Latitude (generated)]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{71225F78-62C8-40AC-9799-04240609D0F0}' />
    </worksheet>
    <worksheet name='Most bowled palyer'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Most bowled palyer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='top bo' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]'>
            <groupfilter function='level-members' level='[none:batting_team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([over])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]</cols>
      </table>
      <simple-id uuid='{3F14ACD5-DEEE-4E8A-850D-07453EC3A40D}' />
    </worksheet>
    <worksheet name='Most times player of match'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Most times player of match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 3' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='5' max='20' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column-instance column='[id]' derivation='CountD' name='[ctd:id:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]'>
            <groupfilter count='[Parameters].[Parameter 3]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:player_of_match:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]</cols>
      </table>
      <simple-id uuid='{8A46A8AA-D6AE-4A0C-AAE0-69DEEBAC6FC0}' />
    </worksheet>
    <worksheet name='Top 5 Batsmen stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Top 5 Batsmen stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk] * [federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk])</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{7E8F5306-F27A-4D35-87DF-3B07D02D872A}' />
    </worksheet>
    <worksheet name='Top 5 Bowlers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Top 5 Bowlers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='Count' name='[cnt:dismissal_kind:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[dismissal_kind]' derivation='None' name='[none:dismissal_kind:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([dismissal_kind])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:dismissal_kind:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:dismissal_kind:nk]' />
              <groupfilter function='member' level='[none:dismissal_kind:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:dismissal_kind:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk] * [federated.19s4xvy1mwth47178cup10f3ie4o].[cnt:dismissal_kind:qk])</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{06531921-3BF1-410D-B8D7-778F9DB74E3C}' />
    </worksheet>
    <worksheet name='Toss winner advanatge'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Toss winner advanatge</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[id]' derivation='CountD' name='[pcto:ctd:id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[toss_winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[toss_winner]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column datatype='string' name='[winner (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[winner]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[toss_winner (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[toss_winner (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[toss_winner (group)]' member='&quot;Gujarat Lions&quot;' />
                <groupfilter function='member' level='[toss_winner (group)]' member='&quot;Kochi Tuskers Kerala&quot;' />
                <groupfilter function='member' level='[toss_winner (group)]' member='&quot;Pune Warriors&quot;' />
                <groupfilter function='member' level='[toss_winner (group)]' member='&quot;Rising Pune Supergiant&quot;' />
                <groupfilter function='member' level='[toss_winner (group)]' member='&quot;Rising Pune Supergiants&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[winner (group)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[winner (group)]' member='%null%' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Gujarat Lions&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Kochi Tuskers Kerala&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Pune Warriors&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Rising Pune Supergiant&quot;' />
                <groupfilter function='member' level='[winner (group)]' member='&quot;Rising Pune Supergiants&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[toss_winner (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[toss_winner (group)]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</cols>
      </table>
      <simple-id uuid='{F3997A5F-81FE-4509-958F-3B0DE95D8E5A}' />
    </worksheet>
    <worksheet name='Venue wise highest over bowled'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' italic='true'>Venue wise highest over bowled</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[over]' role='measure' type='quantitative' />
            <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' included-values='in-range'>
            <min>6000</min>
          </filter>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' />
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' />
              <lod column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A738E330-7E07-40EF-9CCF-F9F2FDE4EF10}' />
    </worksheet>
    <worksheet name='Venue wise highest score'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Venue wise highest score</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' included-values='in-range'>
            <min>400</min>
            <max>4548</max>
          </filter>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' num-steps='5' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' />
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' />
              <lod column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Book' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7A5B5C9A-6E30-40A0-86F3-BD38AC9E12B7}' />
    </worksheet>
    <worksheet name='Year wise runs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black'>Year wise runs scored</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column datatype='string' name='[batting_team (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[batting_team]' new-bin='true'>
                <bin default-name='true' value='&quot;Deccan Chargers &amp; Sunrisers Hyderabad&quot;'>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>&quot;Sunrisers Hyderabad&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]'>
            <groupfilter function='member' level='[batting_team (group)]' member='&quot;Royal Challengers Bangalore&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</rows>
        <cols>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]</cols>
      </table>
      <simple-id uuid='{FB65E1DE-4D4B-45DD-B861-30FBAB9E196A}' />
    </worksheet>
    <worksheet name='win % baased on toss decision'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='20' italic='true'>Win % based on toss decision</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv+ (Multiple Connections)' name='federated.19s4xvy1mwth47178cup10f3ie4o' />
          </datasources>
          <datasource-dependencies datasource='federated.19s4xvy1mwth47178cup10f3ie4o'>
            <column datatype='integer' name='[Match_winner]' role='measure' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[Match_winner]' derivation='Sum' name='[pcto:sum:Match_winner:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' />
          </filter>
          <slices>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]</column>
            <column>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]' />
              <wedge-size column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]' />
              <text column='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>toss_decision: </run>
              <run>&lt;[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]&gt;&#10;</run>
              <run fontcolor='#787878'>% of Total Match_winner along Table (Across): </run>
              <run bold='true'>&lt;[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]</field>
                      <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;field&quot;</value>
                    <value>0.60415171639941023</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-128' y='-166' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>toss_decision: </run>
              <run>&lt;[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]&gt;&#10;</run>
              <run fontcolor='#787878'>% of Total Match_winner along Table (Across): </run>
              <run bold='true'>&lt;[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]</field>
                      <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:sum:Match_winner:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;bat&quot;</value>
                    <value>0.39584828360058977</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='151' y='182' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8BAB26DA-982F-4702-80AC-B159EF3D5257}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Match venue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[ctd:id:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98672179-9563-4385-BE37-3D0C295662ED}' />
    </window>
    <window class='worksheet' name='Venue wise highest score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7F9E7D7-17A9-4F8C-AA6E-3505C3D1BF75}' />
    </window>
    <window class='worksheet' name='Venue wise highest over bowled'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:over:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FF7C9E7-A73D-493C-8624-CB6C8016FDA6}' />
    </window>
    <window class='worksheet' name='win % baased on toss decision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='filter' />
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:city:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_decision:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE7DAD1D-2544-478B-AB3A-71BA03C7DC02}' />
    </window>
    <window class='worksheet' name='Year wise runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]' type='filter' />
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[sum:batsman_runs:qk]</field>
                  <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17754</value>
                <value>2010</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{634937CD-4AE8-48BE-B28A-DCE16CCCFAB8}' />
    </window>
    <window class='worksheet' name='Toss winner advanatge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:id:ok]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_winner:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:winner:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[toss_winner (group)]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F2DAC1A-7A5A-4201-A92B-67C031F2AF63}' />
    </window>
    <window class='worksheet' name='Bat first advantage '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[pcto:ctd:id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[batting_team (group)]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:id:ok]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:toss_winner:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:winner:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[toss_winner (group)]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[winner (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2884A3C4-1CDE-4F60-95C8-9EB379415DEB}' />
    </window>
    <window class='worksheet' name='Leading batsmen'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='filter' />
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A6A786E-8CF7-45E5-9ED1-F669C3CCD972}' />
    </window>
    <window class='worksheet' name='Most bowled palyer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='filter' />
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batting_team:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FFDFD22-6E15-455F-B320-CC9AF4CB911A}' />
    </window>
    <window class='worksheet' name='Most times player of match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:id:ok]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F28B87D-6226-4303-B8E7-74547EB4DF9C}' />
    </window>
    <window class='worksheet' name='Top 5 Batsmen stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:batsman:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{200A0467-F784-418E-8FF4-9D768D8C2A98}' />
    </window>
    <window class='worksheet' name='Bowler stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:dismissal_kind:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDC7054E-421C-4652-8091-D2F9ADCC62B6}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 5 Bowlers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:bowler:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[none:dismissal_kind:nk]</field>
            <field>[federated.19s4xvy1mwth47178cup10f3ie4o].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD00A985-470F-47A0-B0A4-3AC62CDD235B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bat first advantage ' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bowler stats' width='192'>
      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
      gSyVHoL0FpYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Leading batsmen' width='192'>
      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
      PAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Match venue' width='192'>
      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
    </thumbnail>
    <thumbnail height='179' name='Most bowled palyer' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='179' name='Most times player of match' width='192'>
      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
      LOcQfgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Batsmen stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Bowlers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3BcV37v+bmhcwC60ciZASRAEgxgkkRSWRM1o5FG9ujpjdOOXbXj3T+8
      /6xra+uVq7xV+2pra8tVtp/L895zeTzjNGPPmxlNlDSSmCRRYgBA5JzRyI3O3Tec/eOCoCCQ
      FANAsMn+VKG6G+f0vefePt9zfifc308SQgjy5HlEkbe6AHnybCV5AeR5pMkLIM8jTV4AeR5p
      8gLI80iTF0CeR5q8API80uQFkOeRJi+API80eQHkeaRRP/khm81iGMZWlSVPnvvOGgEYhoGm
      aVtVltskw1D/PNt2Vt7xNyORCIWFhZtQpjy5yhoBuFwuXC7XVpXlNslSWi7h8/uR7vCb6XQa
      v9+/KaXKk5uon53lwcE0DHQtSTyR2eqi5HlIyCEBxHj31xdZWuhBKj3GjrswgfLk+TQ5JACJ
      4c4LFDQ2omrZdanTw510D4dR3SU0Vdq41D2Gv6SOY/sbkO/UVsqzaQghQEsi0lEkbzGSvLVV
      MEcEkKG/Z5xdzfuJahoFFaF1OcqrthHPSsQyCuNLKZ577jkGOtpIGwKHZAJgmia6rt/vwuf5
      JNkY2Tf/T4yRs9hbfg+l5jh4SsBZaP3dZ3JCAKYpUxgMIiMREgJvILg+kyTjcntIpGJ8uopL
      knTD93nuH+bSMFr7DzBGzsHyOCDQun9G9vI/gOIAhxcchciBOuRALXKgFslfiRyoQ3IFNq1c
      OSGAxOIU5959j7auaXbvCBBzNfGtr59ck2ekv4Ph6WVUd4imag9vv/0bAhXbaVCk1UovyzKK
      omzFJTxyCGFCOoo+9qFV8We7kAuqsO97BXX7M6CnkYPbQRiY0SnMyCjmXB9mdBIxeRGt+ycI
      PQN6BsnuQgrUo4R2IvvKkYLbUYJ1YPcg2T2gOpGku1vTlXLnmeA43/vbH7K7uYreaRevv3zi
      jqdBZ2dnKSkp2ZTS5bEQho4524nW9yv0wXdBz6DUHMe+/xvIJU1Iiu32jqOlEPFZzHjYel0a
      wZjrRSQXEIk5RHIRVCeyvxLJW7LSc9QhF1YhecuQPUVIjs+e8s4hAUBkdoLhqUXqdu4i4HHc
      8ffzAtgchBCQjaN1/wy995cYcz3IhbXYmr6CuusLSO7guha6t7eXN998E4fDwRe+8AX+5V/+
      hdLSUl5//fWb9tJCCDCyiGwCMlHMyBhmZNzqPZZGMZdGELGw1TPY3EiuQuTgNuSCSozpNuTC
      Gmz7XkVy+JCcBeDw5YYADC2LARg6uFz2uz5OXgAbi8gmMeb70Nr/FX3oNJLdg7r9aWyNL6KU
      7bvld03TpLe3l/b2dtxuNydPnuTKlSvs27ePUGj9JMdtl0lLrQhjDHNxGHNxCHO+D3O+H2QV
      7G4wNDCyYOq5MQZYGO3ig/5hFiclHjuxG2+glMrSwB2bQA8KmqZx9uxZgsEgzc3NdHR0UFdX
      lxOr1EIIRHQSfeQsWsf/wFyeQCltwvn0/4FS+xiyu+i2j7O4uIjNZsMwDGRZRpIk7rU9lmwu
      lOJdKMW7rp8rmyB75R+Rg/UooQaEngYthdDTuSGAUF0jjako7wyPMDExSbHsobJ07cxANrHI
      pSsdFNU0sr3MyccftVG5u5mq0J1vmdhspqamKCkpoaenB6fTycTEBA6HA7/fj7EwiDnbjbrt
      KSSHd6uLCqyYHnoaY6oVresn6CNnkexe1B3P4fz8/41cWHPbtv01WltbuXz5MkIInnvuOf7m
      b/6GUCjEE088seHll+weHMf+6MZpNzOBsskYM/MRCovLsKNjc7lW9k7rzM1FCRUHQUsxF9Mo
      CV5vuVKpBHaHG2XDV58MTv/shwzOJNhz4gsc3VWxpmIvzoVx+gP0t3ciVJ2ahj0Md/aw73AL
      9hXz80ExgYQQ9PX1MTk5yZNPPsnIyAiGYdDQ0EDin1/DDF9FDm5HqWxB8oSQfGXIhbVITr9l
      vzp8YHNv+pSuMDTM5Qn03l+idb+BSC2hVh9DbXgBdcdzSOqdj8PuJ4Zh8JOf/IS5uTleeeUV
      fv3rX7O0tMSrr75KaWkpcLNpUKHT1dGJJ1jE/MISZnSeqqYmrMuNceHt8zz+ypfJDPfz4WSU
      rz1zYvWrI4O9VG7bSzy6SEVZ2QZezjJTSwX83n84yb/+vJ+juyrWpAZDIYZ6ugnUbCM6P06B
      y02BVyFrCCTDWhnQdZ1sdv0q8v1maGiIxcVFnnjiCQzDQNf11bLJ1ccRiXnksn2I9BLGfB8i
      OY+IzwIgOQssATgLwVcO7hB4y5G8JdZsiDuE5L03kQstiTFxEdH9PxDTbUieYpTGryLVnUIO
      bkNIMpoJPAD38lYYhsGRI0cIh8OMjIzgcrl49dVXAVbrwU1MIBm/W2FoLMz+I9VEo/NrUiu3
      VREen0ZPmZT77ETCg5z/qJPCmkaCqrVpbX5+nuXJfqYiGRxFNZQpEcZmFpED9ez0JbnUNUr9
      gSfYV1d8m5cTYEdllu/94B1anvriutSRnk7kwgqCXjvpcIbJmTALMUGtKmGTrO5ZVVXs9rsf
      RG8UmqZx6dIlenp6OHLkCO+99x6qqlJeXk7g8f8Vjv0hqC5AgKmDaYCeQVyb+YiFEbFpzOgU
      Yr4Xc+BNhJ62TBVhIkmyJYiCKmR/BbK/AslXgewtRvJXIil2UGyg2EGSQUuCJFut/eA7aFd/
      CHoWpfooti/+PyiVh0Bx5OQiYjQaJZFI8Nhjj9HW1sZf/MVf8PLLL7Njxw7gZiaQMEmm0jhU
      k49aByjx2j/RAyzR2RFDT4wih7aTXpqgxKsyuZRlJppld6WX8trdDA/143XZqK3bxsDwFHoq
      SlNDLRf7Z/Fk50imkkRdtTx/ZNe6098YnVhMw+e1EUtk8Xrda0yg2fEBxmYiODwBdu+opK+7
      j7L6Bop8zut5HhATaKO5Ng1pxues3iI2jRmfRcRmMCOjiPQyIh1BpKOgp5Ec/lXTSnL4MWY6
      kRQVMzKOHNqJbcdzqA2fQy6o2upLuyeSySR/9Vd/xfHjx6mvr6ejo4NYLEZDQwMHDhwAbiGA
      kd6rjMwsU9+4H2Oml5H5JLsPHKMiIJia0hCpaWwltSQXw/htJlcHZwmUlFDstVFQVMb83CxO
      u0ywqJjZ+QhmbJqB0WnMwhoaCrKMzSUJVm1nd83tVEidkd4L/PLNMY4/Vk7XqMJ/eOVkfiHs
      NhF6BpGNQzaBSEetxaVoGDM6gbk4hDH2IZK3DOfzf4ZScQDJ5t7qIm8ImqbR09ODaZrU1tay
      vLxMNptl27Ztq2sN920dYHqok77JZfYcaCHku9PBk87A1Q945/wEe/fXs62xmdJCd14A94gQ
      lolljF1A8pWihHZudZHuOzmxEGaR4gf/7R/IONxU7jrC00d35wWQ557JiXUAC4GzqIYvPn8S
      1fZgT7/lAtemYjVNo66ujn/4h3/AMAyee+45Ghsbt7p4942ccovikdL86le/4mLX6Lq0dGyR
      1o9aSQLZ+DxnT5+mf2KeHOne7jumabKwsMDi4iJer5dvf/vbHDlyBK/3wVh8u1/kkABk/IEA
      wWAQn9u5LtUQMgUOhSzQPzDCgWPHSM6MkTXvf0lzAUVR2L9//+rnTCbD/Pw85eXlW1iq+08O
      mUA2duzZQyY+xUcD8zTvWjtF5/EX4rRNASBUO267A7dTQjME8gO2EPYgIIRgaWmJaDRKPB5n
      cHCQmpoaTNN8pO5RDgkgw8fvvsNkNIK/5si61HhknsmZGdwFQZySQVdvD/GETL0qoT5gC2EP
      Apqmce7cOTKZDBMTEwQCASoqKlDVHKoSG0AOXa2NjBbHrqr4AzfYNSkEwdpaFCGo2LWXmalp
      6up2oObe4uV9wWaz8Y1vfGOri7Hl5JAA4sS0EF/8/G5+fX4aDu9Yk+oNFOMNXN9WUVVTc78L
      mCcHyaFBcIAjB0Kc+XCAx08dfOC2OOfJTXKiB0jOj9O3INi//wnq6qe4PDJHdcibF0GeeyYn
      eoD40iyz81GEEOh6kpGhqa0uUp6HhJzoAYrrm5C73+D737+CaUqc+vxX861/ng1hzV6gaDRK
      Op3eyvLcAoFhmEiyDEIgy3feecViMXw+3yaULU+ukkOb4a6RYXhwnrrtlfnNcHnumZwYA6zF
      YDmS2OpC5HlIyIkxgIUglUyRii1QUrORzxrneZTJIQEs8sYP3iOhjaEWHuI/vvrkmtRMYpnw
      XISCUCkFboWpiWn8xWX47sGRVp6HnxwSgA+XbZnShmOY8no32ol4FN3I0tXeRUmhRBInY+Fu
      jhzZn98Okeem5IgAUlz+qJ1USmeirZXqPSfW5QgW+Lna1Y+vbBspI8qept0MdbeS1gUO8rtB
      89yYnBBAKhonm9Wo2N1EBRAoX+87MiVsPHHicVovtpJxqCSzGZJpgU2RsMn53aA3YnBwkPn5
      eQ4ePEg4HGZxcZHm5ua7mmLOVXLiSlW7k9IyN31d05QFVTo6x9blWZ4Z5dz5D3GGKtm7s47W
      CxfwlNWueoXLsxZN0xgaGmJpaYm2tjZ+/etf09fXx8DAwKadc3FxkXPnzgHQ39/P97//fRKJ
      rZ3Ry4nqYXP6qN+xF586z6UrXSju9c8El9U18tRTT7F3ZzVOX4iTTz7Jjsqi/IrxTVBVlWPH
      jmEYBkVFRTQ0NPDMM88wPT29KecTQjA1NcXc3ByZTIZLly7xwgsv8Oabb27K+W6XnDCBLOy8
      8rt/SCyRwufLb4S7V0zT5MyZMzz11FMoisLFixcpKCjYNA/VkiSxd+9eJiYmsNlseL1efvCD
      H2CaW/vMak4IIBWLkJEk0nGTsrLNixf1KJFOpxkYGGBkZITnn3+e4uJiurq6ePnllzflfEKI
      VT+ohmFw6tQpmpqaaG1t3ZTz3S45sRVicbSDn505y8hAlsPHdlJc28ThPXX5rRA5hGmavP32
      2wwPD1NbW0swGGRoaIhXXnkFm+3OXKtvJDkhAIQgFpmgtW0Cf9BHWVUNJcG1fv8Xpgbp6B3D
      FaikscrJR639hGoaaG6oXs2XF0CeT3NzE0gYdHf2sqOpEZssYWaWaB+IsH9PPfGZESYzbnZW
      BJEVZcVrsGBpbgF/cYgNj8MoSfgCJUz2v0HY42I4Al89tXdNFn+oisdDlfR0DdA/GefEU08y
      2HGVtFGFc2WoL4S45wgkDwtCCAwMIpkF3pn6BQFHEXsCB5AlGZtsTTLYZTs22WZ5m15pRta8
      StInGiFpTZrlSPrGfbQpTAyho8o2pC0ezd1UAFpsjkRklqH5bewqcSKyy0yNTlO/s47BgQkM
      fyHTZpJQZQVL4WlUXxGR6UmW0wkKA2W4ZJ1YPIHL62J+doGCUBkFXuc9XG4aQwpwaH8dlwdi
      65ONDP2Do1Q37GZ8sAtVVlAVME0whAE8uoGyTWGSMVLEtCiR7CLh5CRL2Xmi2jLL2hImBtPJ
      cYaivauVE6z7ZggTEMgoyJKMKqlIK6+KpCAjI0sKiqSirkR9t0k2FElFQkaVVWRJwS7bV8Rl
      Yy49Qzg9wWPFT1PlqcOlerDLW7M+c1MBzC4sUdW0j8mRIShpAiBUGmRxZgzhCGBDMLe0iM8D
      H358lX1HHkPLJNAzbub6hyjQ5ln2lrNDJLj40QXUYD1fefbYzRqF26CAZ547wPBUjOeeaV53
      mJ62j5nPOkmLIYpdMmfOnsXuCbFDlZAl6zIVRdlSe/N+IIQgrkeJZiOEk1PMpcPMp2dI6UmS
      egK74iBgD1LsKmdHoJGgo5hwcoICe4AKdzWGMDE/IQBTmAgEutAxTYOsmcEUJprQMEx9JY+B
      ZmpoprXKnjUzaKaGQGCYOprQSRsJdKGjmxqLmQXSRpJ3wj/HqbhwqR6CjhClrgoCjiKCjmIC
      jqJVQW0mNzyDEDoTwyPECJNIGDQdaMQO+ANBxruuUHPgCJFZ67FEuztI857tDA0Psi0UoGrH
      Toa6unDYgzQ1bmf26iX2HX+cscH1i1d3RgpNCvH48XrGJpYRvrW9SWPLSTTdQJIVHHaVkqos
      qs3OhkdqegAQQmAIA83MktBizKbDzKamWczMMZcKo5kasiTjVj0Uu8rY4d9NkbOEYmcZHpsX
      eaXlvhbwosZbv6llBRBcf41no0ynJqjy1BLJLrGYnmM2Pc1gtIeoFsEU1tRogT1AqauCkLOU
      ImcJRY5ibLINVbYh32Vg7E9zw0GwMA0isSSBAh+p2BK4CnGSJJ51kI4vUBgoIpFMgBB4XDYG
      +wbwlNYRcEq4/X7i0SgqYPf7MeOL9I7MEiwOUVES4u6CjGS58Jsf88bbIxw4WI7h2cVvfeno
      IzMLlDUyJPQ4kcwCs+kwi+k5ItlFljILZM0sHtVLoSNIkaOYUlcFfnuAAnshPltBzkV1yRoZ
      olqEpcwi8+kw08kJYtoyST1B1sjgtxdSYA8QcpZS6qqk0BHArXrxqr47vtaskcmRWSBMokuT
      tLfPULutjIKiYnxux0MnAEMYDC730BVpo8ZbTywbJZyaJKYtkzHSaGaWAnuQkLOEkLOUMncl
      hfYgDsWBU3EhSxs+/bDlCCHQzCwZM00su8xsOsxMcopIdpH59Ay6qeNQHHhsPoqdZZS5Kwk6
      QgTsRfjsBeuOZwiD2dQUPZEORmIDuSIAgCj/5T//LUX1NZTvOMTJlp0bJgBN01haWiIUCmGa
      JouLi4RCobveFHbNRDFWbF5DGGSMDCk9QcpIEteiJPQ4CT1OSk+Q0OIk9TgpI7k6YHcrHoqc
      JRQ6glR6agk5SihyFqNICiDlXMu+kXzSrIprUaaT4yxm5plLz7CQniVtpMgaWRyKk1JXBYWO
      INPJcVyKh8XMHEk9TsARYpt/V26sBFvI2Jx2yzu0Z+PiAwgh6Ozs5OLFi7z++uv09/fz/vvv
      8/u///vY7DaWs0u4VDdOxWW5ZVkZ7KWM5MprirSeIqnHiWsxUkaShB4ja2RIGynSKy23IQwc
      sgO74sCluHEoTtyqh4AjRKWnFpfixm8vYCmzyFw6TEvocYqctxtA8NHimvglJPz2Qvz268+H
      mMIkocWIaVHm07PMp8NMJcYIp6ZwKA4OFh1jh7+RkLMERVZzSQAuXvrtV8maAqdnfde2ODXE
      1Y4JDr5wCjHVz4cdwxSWb+fo3u23HHdIksSBAwdYXl4GoLm5mfl5KyrmWHyIX4z9G27Vg9fm
      J6ZFyZoZhDBXZ0gMoWOXHZYdavPhUt2EHCW4VPf1/yluXKoHZWXqUJFXphBvMJCryzutuCdk
      ScZnL8BnL6DCUw1Ytn7bwsf47YU0FOxZ03vmkAAytL7/PgvpJAX1h/n8401rUoMV22iIpDGB
      0bkEzz33HAMdbaQMgVO2ukzTNDEM44ZHv5ZmGAamaVprBoZOxsjgkJ0U2UuodtfjVj2rldut
      enApblT5DqdWxfWFqNWry2RYXFxc9c+/sLCA0+nE4/Hc2bHzrENB5VDRYwDrNt/lkADcPP/K
      1zFTU/zsvYlb5vx0i//JYc6NhjynT5/m/PnzTExMUF1dzfnz55menubV336V39r++3gUH171
      5k3zRgyjrl69SkdHB7/zO7+Dpml897vfpaWlhVOnTt3zsR9lRketaELV1dWcPXuWdDrNs88+
      u+oGPocEkOSn3/1HusIRHvvcq+tSwyPdfHz1Ku54hj3FLt5++zcUlNaxU5FWZ0dkWb6h//tn
      n32WZ599dvXzU089tfq+0n5/vEwfO3aM5eVlZFnmypUrnDhxgmw2+8j5699IDMNgeHgYm81G
      TU0NVVVVTExM0NPTsxonOIfuriCSNDm8r55weB6oW5NaVtfIV+quB3crr999f4u3QaTTac6e
      PYumaSiKwokTJ1Zj2ua5MxRF4dixY7S3t6OqKnNzc1y5coU/+IM/WM2TQwIAIUBVFYSeIzO3
      t4lpmrz11ltcvHiRVCrFn/7pn7K4uMjc3Fy+8m8Q6XSapqYmfD4fHR0dq6ZlTqwDCNNAM0yM
      TJzwXJTi8gq8zjvf0/OgL4Tl2Vg0TePv/u7vSKfTnDx5kp6eHnRd55VXXlmdXMgJASyOdtG7
      7OR48zaM+CRvfTTL55+58yAZeQHk+TQ58VC8IpsMDQ6jGyaz40NEMvnYp3k2hpzoAYQQjHZe
      4NzlPrwldbzw7AnctjvXbr4HyPNpcig+wDU0pqeWKasI3bEJlI8PkOfT5EQPsBaDeCyDx+fO
      jwHy3DM5MQZYS5qujuGtLkSeh4QcWgfQGR4cIzo9iFq2b6sLk+chIYd6gAjvv/UhVycnGbzS
      uy51eWaUM6dP0z8xj5GJ8sHZs4zNLpNj9l2e+0yO9AAmibiTmlonjpLd4Ayuy2HzFnH8eIgr
      l7pJzgl2HzrEcFcPZaGWvIPcPDclRwSgMTE6QjyuMxHppXxny7ocbsXgzAeX8ZTUoYg4fpcb
      v0chawgkIx8fIM+NyQkBROemuHLxY5bTGk67QiKVWZdnIZqkae9ehvoGMd0qY1OTLMQEtaqE
      TcrHB8hzY3LCOPAX1/ON332J4sB2vvnaF8kur/cpb1MEU5PTVO/aw759e8ksL7NzTyO2R/fR
      2Ty3QQ6tA5ic/+WP6JpYoOmxL/D43pr8OkCeeyaHBLD2yau78YqQF0CeT5MTY4DI9AgRFKJh
      neaDm+fFLM+jR04IwG5XOP/Tf+Ni6wINH1ZSs/cEXzy5b40JJITl+FaWVWRZst4rKkqO+Ea8
      5rjXZrMhSVb5JUnKPxCzCeimycjCAm/39eSSCZSlp7WDSMZk195mAp61szkzoz30jc1iSl62
      V9jpHZnD4S/l8ZamVf+gD6oJJITggw8+4NKlS/zxH/8xpmnyF3/xF7S0tPD0009vdfFyHlMI
      ZmMxhBAMLczzs64OusPT7C4tu3kPMHDlfUYiGQIltRzasw1hJJmYjFFTU0p/2wUmFhOovhKe
      aNmDfF+8lGW4eLGL5oPVvPnuZX7ry8fX9AAlNbvwFQQYnE4wn4jx1FNPMdjZSsoQOFbcjxiG
      gaZp96Gsd86RI0eIRCJomkZbWxv79u2z3AI+oOXNFYQQtE1P8f+99w66aaBIMi1VVfynF75A
      460EoDgKeeKpRua6LjIdq6XMbZBKrri/lt0cPryLnr5hMsuzjE4v4CsqYbKvE0eojuoCG87S
      chLzszhVk7bOAWp376cq5L9L57gANmQjxujoJGrh3nWp8YVpJpd1Ghvq6epoxTANdANkCRT5
      uleIB9mkUBQFTdN44403UFUVVVU5derUIxW3d6PQDIORxUX+re0ybZMTpHWd2mCQ//S5LxF0
      X99J/BljAJNkRicgCbR0nIywKo+RWqanV0N2uskuh0nYq6llifSuoyTGr0Kolr7OLtyeAmIz
      IzQfPkj7lW6qQkfu4ZJUvvTbr6EbBjaHe12qsLnZWV+AIktsr64ildUIVtTgVK7HIJEk6YGu
      TM3NzXg8Hv78z/+cZDJJPB7Pu0W5TYQQLCaTfDg6TMfUFEupJG67naM1tXy+cQ9Om41ij5di
      r3fN9256d2WSvH/6HFX1u3EkJrjQO83+o0cBKPB5GApHcNu92P0h6pxB7AgmL1zE7vfj9hfh
      Ck9TUlpKiVvjykeXqNi+5x4uT2e072N++dYox49X0DUq8drLJ9fk8Bdc9w/pCVo+NQvcrns4
      5/3nmlc4ALfbjdu9Xuh51mIKwfjSEqcH+3mrtxvTFDy/ezevHDhIfbAIZaXBE0Lw/vvv8/7c
      HF/84hdpb28nEonkyiBYp7/9PL85N8He/dvY3tRMWcDz0C2EmUIwE4vSNjnBqe07cee3bdwQ
      IQRpXad/bpZ/a71M90yYyoJCnm3YxdM7d+Gx29etE6VSKXp7e4nH4yiKwsTEBF6vNzemQUFl
      Z/NRWj/uYXhogKwtQNnR3HJ8pRkGKS1LStOIZTIks1mWUymW0ymWkkmWUkmWkkn65+ZYTCa4
      MjHB87t2UxMIUuz1PjTu0IUQ/PKXv2R8fJzXXnvtjgJzX5vN+XB0mLd6uplLxNlbVs7//uwL
      NFdUYr+Fueh0OgmFQkxPT9PQ0IDNZqOqqipXBAAgcBbV8eXPnUJRNy7OlxCCS5cucfnyZX7n
      d36Hrq4uPvjgA/7wD//wtjfOJTIZltMp5hMJouk0i8kE0ZT1upBMEM9kiKRSaIaOZhikdevV
      ZbNR4HJR6HLjdzop8/nRTSsoXSSV5P9685e4bHa2h0LsKSvncE0tO0LFGyqG6elpvvvd71JV
      VcWrr76Kw7FxrudvRDweJ5FI8K1vfeuOrmNkcYEftbVycXwUh6pyavtOnt+1m3J/waqZcyvS
      6TRXr17l2WefJRaL0dbWxvLyci4JAJxGjJ/+9KeU7zzEyUM716Sl40v0dI/RcGQ/amKBjy52
      ULZjL9sriz7TVGppaSGRSCCE4ODBg0QiEYQQjCwu8FdnT1NTGKAmGGQhEWcxmSSRyTCfsCr2
      QtLamGdXFByqik1RcNlseB1OCl0uynx+/MUuQl4PBU4XfqeTkMdLgcuF/TNmpBLZLB3TU7RP
      TXJmcIAftbdimIKW6moOVFZxqLqGoNuD4x4GyvPz8xw8eJCDBw/el52yyWSSjo4OhoeHeeGF
      F1Z9dN6IeCbDx2Oj/Lyrg+GFeWqDQf7o8RM8XrcN22p43ttD0zSGh4f5zne+w4svvkhZWVmu
      CUAmWFqK3TAJ+NYPDg0TCuwyWWC4b5jmo0cZ6uwmW16E4xYNxKdv4ic/jyws0BWeZmh+jurC
      AB6HA7/TSYnPx+7SMgpdLqtSu1y4bTZ8DidOmw233b4hayNeh4PjdfUcr6snq+uEY1E6pqfo
      DE/zo/ZW/usH56kNBtleVMzhmlq2FYUo9d1ZrKyqqipmZ2f56U9/yssvv0wwuP5ho42kqKiI
      mpoa7Hb7Tb1qT0eXeW+gnzMD/SwkExyvrecPH3uCbUUhbHc5je33+/n2t7+9+rm2thbIka0Q
      FjbqdjaQjk9ycXiWvTsr16R6/AGctmkAhM2Ox+HE45LQDIH8GQ/EnD59mjfeeB9pilMAAB5u
      SURBVIPBwUHq6ur40Y9+xOjoKC++/DKvtxyhLhCkubwCVZZvq7vVN2nxqszjpWxHA8/uaCCR
      yVhjhakp2qYm+H/feQubolITCLCnpJT9lVXsLC7BJsu3FMTU1BRXr15FCIEsy/flgaGXXnqJ
      eDxOaWnp6vl006QrPM2ve7u5Gp7Gqaq8uKeZo9U1FHu9yJKEMAyyN4nvcLfkyCwQQJI3/+0N
      JqMRfFVHeOWFQ2tMm8TyAr1XruLe1Yi6MEnG5iG6nObIkf2oD/hWiI0gkclwdXqKnpkwVyYn
      CEeXUWSZPWXlNFdU0VxRSanPh/MBipN8be7+4vgob/V0M7gwz77yCl7c28yByqq7bu3vhBwS
      gMbP/vl7RLKCsr1P8WzL9jUCiC3OMLMYQ7G7qKooJjwxRWFpBT7Xdbv2YRbAJ9EMg7l4jK5w
      mM7wNFenJ5mPx6koKGRbURFHa+tpLC2l2Hv/nYTppsnVqUl6Z2dIaxrvDfST1jWe37WbJ+q3
      s7O45LZ62Y0ihwSwxD999yxf+mIjvzwb5rdfPvnQrQNsBtfmzMPRZVonJ7gyMU7v7CxCCKoD
      AZorKolnMgTcbo7X1pPSrAjvGU3DEIKUpqGblulhmCYZXSelaavvTSHI6BqaYXnwTutWWlrX
      0AwTbfV7GinNMkVTWhbdNKkLBnlxbzPHa+spdLm2ZKo3hwQAvVfO0jWyxKETT1NbfOet16Mo
      gBuRyGTomZ2hZ2aGD0eHGJyfR5IkXDYbNlkBidWxg01WkGUJRZJRFQVZkrApMook41BVZEnC
      YbNhUxRssoxTtaHIMk6bDZtsfUeVrRkyl81KG16Y5/LEOP/zEydpKCnd0nuREwJILkzQP2/S
      vKsGPTrFldEMR/bV53uADWAhkeCfL39MbSBIS3UNiqwgAYosI0sS6ooQlBURSJJ0z7a5FW7W
      vC82/meRE7NA8YUwswtWnF7DSDE8GObIvvyTYRtBkcfDH5948r6aHxshoo0iJwRQXL8Hun/C
      979/GcOAU59/6Y5b/zw352HZZnE35JB7dIFhmEiyjMTd/Wh59+h5Pk1OjAHWkmGof576nZX5
      MUCee+bBfTrkphjE4smtLkSeh4ScGANYCNKpNOn4EsVVWzt1lufhIYcEsMRPf/AuiewYSuEh
      vvnqk2tSM8kos/PL+IuK8bsUwlMz+EKldxVONc+jQw4JwItTiVCy5yimVLguNR6NkM6kGGvr
      ojQgkTDtDE8tcPQTe4Hy5Pk0OSKAFJc/aiedNphsbaN674l1OYoKC+joHsBXto2UEWVvUxND
      3a2kdYGDvHv0PDcmJwSQiiUwDJPqPfuoBgrLitflSQsbT5x4nNaLbWQcCqlshmRaYFMkbHLe
      PfqNGB4eZmFhgebmZmZmZohEIuzZs+eB9pyx0eTElSqqnWCRjc72MYI+QdvVkXV5lsIjnDv/
      IY6iCvburOXKhQu4S2vy0WFugqZp9PX1MTMzQ3t7O7/61a/o7OxkcHBwq4t2X8mhdYAsP/jv
      /w3hciIXH+Trzx/MrwPcA0II4vE4Z86cobGxkfHxcfbs2UNnZydPPvnkZx/gISEnTCALO1//
      vT8iFk/i8/vyWyHuEdM0OX36NE8++SSKonDp0iUKCwvvyEvDw8BNDYSJgQHSwNxIO9PxG2RI
      zjMwtWS9zy4yMLa4Po8eZzK8fM+FTMeXWU5EmZ+PU1Dgv0++SB9u0uk0/f39fPe732V8fJxg
      MEhHRwe7d2+OuxkhBAsLC5w+fRqwtt38/d//Pd3d3Ztyvtvlpj1AKh4hPD1NfHaOAl+Six2X
      MZ0h9tWFGAmHsckyI5NzhEe9HNhbxcRgH5OjKgcONTN0tZWsvZCDB+qQBUwNdtI3scDeliMs
      DfcRXlqkfs9xqopuz3Nbcn6Mn509z+hglsPHdlJc20hLU12+F7gHPB4Pf/Inf7L6edeuXZt+
      znA4vOpx44033uDLX/4y3k+5Krzf3FQApp4lurxMMpnBk0mRzuosTndS5mtmWSrgaIWdpFpE
      jTfJ1NQSvuJa6spMlmcWSGR0Fmf6mN9RTGRRR9ETCD1Cd+8kPsnG0aMHGByZh6Lq2ypksHYP
      L/n9XGmdoKDIT1npes8Fi9ODXO0ZwxWsorHKyUetfRTX7GLfzqq8UB4AJEliz549jI+Po+s6
      c3Nz/Ou//iu7d+/mmWee2bIdqTcVgNMbpHb3bpbVBPFsmmRWw+V2IrBRVlqMLMUJD7UyK8k0
      72/EjNlQ1AySliCR0XC6XGCaCGESjydQXS5UIXB63Kiqik25g+kZScYfLCM89Atmpp2MRmW+
      cnKtr1FvsIrHn6ikp6uf/vEYJ06dYrCzg7RRiXPlVEKIm7rieCQRAtIaRt8kkseJXFcCsozV
      YkhsdMuRTqdJpVJomkZNTQ3Hjh3jnXfe2dLfZFNngYbb30cr3kdD+UZsQV7mH//7rzj+eD0f
      9+n89lcfX/P7aKkY/YMjVGzbzfhgF017mhnsbKVy9wEckuVKY25ujlAotAFlyUGEQGgGpLOI
      ZAYRSyElM0iJDJLAquwChCIj7ArCpoJDBacNyW4Dpx3JpoCqgCIjqXf2QItpmpw7d47x8XEq
      Kys5cOAA77zzDsePH6eiomJTLvl2yKFpUJga7mRoMsqu5oMU+51r0q5++A4LuovCwiKKHBmG
      whFUVxHHW5pQHgG3KJ9GmMKq7LHUyl8SkdEgq4NNRfK5kNwOJJ8LkcwgOe3gtIFmIFIZSGuI
      rAYZ/fr3JCwBqIolBodt5Xt2JIcN7CqSw4Zkz53JxZsKwNCzJFMZHC439luo3TQNhJBQ7sSk
      uStSjI/Fqa7yMz65TFV1ydoeIJsmqxnIsorTaSOdSmNzOFE/Ua6HUQBCCDAFaDoilUUsJxDx
      NCKeBt0ASUJy2pAKPUh+N5LPBTYVZOkz7W4hhGUmCcA0LXGks4h01hJIOgtZHZHMXM8HVlSS
      a2JwOcChIjntllgcKugmYjmBVFxwxz3JRnNjqQqdrisXSUs2fEXVFLl0CoqrsN+grMnkDAsL
      HmprCzaxmFk+eudnvPH2CAcPlZN17uS3q9dWZJvdie0TuxxcD6lvffHJyh5LWq17Ig2prNUy
      O2xIXidybTF4nEguO5Lt7lpkSZJYDemjyFbP4b6x81yh6ZYYsjpkNERaQ2SyiEQaEdFBMyxB
      mqZ1TFMgLcaQq0JIHueWCeEmd0bCpkrMxw12VRQzN9yN2w2/Od+PsKucatnNxxfbWDZsPHW0
      hu4rV+no8/C5509s0sqayq4Dx0hLddRuLyMQerha8VshTAGJNGYsBYk0IrpiyuiGZYJ4Xcgl
      hUgBr2WG2BSkLdjLI9lUSyCeT5X/Wi+iG1bLrxuYE/OISAKR1jBah8Flt66j2G9dx30Uw41N
      ICHIahroSS51jlGgpqmuL2EyWoxdn8KdSZKp3MN8fyvbtpcRXfYi4lOU7Gli89rdKH/zn/+W
      YH0N5TsOcbJl50O1FUIIAYaJGV7CnIkg+92IeMoyZcCq2B6nZcZ4nZYpo6rWZE2OLQyKa+aS
      BGg65nwUMR9FxFJWzxDwIhV6kIM+S+R3aV4LIfjOd76DYRi89tprBAKBdXlu0mCbjPVdZWI+
      RsW2PTizi6g2Fx6Xiqq78RZ46PzoNHOJLDt31eJy2RB4N3lnnYLN5aS4uJgCr/Ozsz/gCFNA
      KmOZCtdMmVQWUhlrNkYIqxKUB5G8TnA7tqRl3wws02rlg92GUlGEKA9aplMijTkfxZxcwBwM
      W4P1oBep0GsJ/w56h0gkQiqV4uDBgzcNN3VXs0B6YoEPLl7FU1zLgca6+7Q1QWdmIkxWCJze
      QkKBtfuBFqeGuNoxycEXTsL0AB9cHSJQsYMje7atmrFb0QOs3l7DXDtIXU5YdrFpgtuBfG2A
      qsiIZAa5LGANGh9BxIrJdO0+mQsxSKStgXWhF7m4AKnQ85kD+cXFRX7+859TV1eHaZo33OR3
      Vya76ini5JNP3c1X74Es7Rc+ZCGTorCuhc893rQmNVixjYZIGhMYnY3z3HPPMdDRRsoUOCWr
      EpqmibHB7rVvhKSb1oAwlrR+xGgKkmmEZM2O4LIjlRUieV2rlR6uT6JQ5MMEuA9lfWCRJfC7
      wO9Crg5BOmv1DEsJzJ5xJFNY5mDIjxTwgN2G+JQWCgqsiZmPPvqIl156ad1vL2X1XNoN6ub5
      V76OmZziZ6cnb5lzTaMgQFyvWhu/6mgKq2VPpCCxssCUziJpptVi+VzIJQVInlKE04awK2sK
      KKxCEY/HGRwcpLm5mYGBAbq6ujhx4gRFRUUbW95cxWFDqiyy/jQDKZbGXIxijs8hBqcRbgcU
      uJCDPiS/e/Uev/baa6uHWP3tVwbizORUhJgkP/veP9M9E+Hocy+vSw2PdPPx1au44xmail28
      /fZv8JfUslORkKXrgbJvFXdXCMHFixc5e/Ysp06d4vDhw5atLq1msObC4ylEdGVxKZEBw7Sc
      dXkclq3qcV6fb1dvHaDi2nlHR0cZGBjgwIED2Gw29u/fz9tvv83rr79+tzfs4UVVweVAKvZf
      Ny3nljEXohBeRthU5CIfUoEbKehb7WExBWIxhjEyi6QbyNXFuSQAWIxlad5dTTi8CKz1DVpW
      18hX6hpXP1fU3/m2XtM0uXr1KidPnmTbtm2IZAajbxKcdmtfUzIDyQwoCpLTBj4XSollyuC2
      3/UgVZIk9u/fz8zMjOWl2eXihz/8IY899thdHe9RQZIka+3D5wKfC7m+FJIZzOUEYj6GObcM
      xiRSwGsJJaNBRkMuDyLXFCPZ1dx4JNLCRKDgcjkQhrlpZ5EkCU3T+PGPf2wNWCMJxNyyFWW+
      NIDSXI/ash3l4DbUhkprsOp1btgMjWma2Gw2vvWtb9HZ2bkhx3xUkCQJyeNEqShC2VeLemg7
      SoO1z0gsxUHTUfbVIW8vW92ukRM9gDBNNMPJq998henZKIcqN2eLsyzLNDY2cuHCBaqrq5FC
      fuR0FsnnRiq6s+Bzd4Jpmrz11lt0dXWRTCYJBoN0dnbywgsvbMr5HgUkSbL2KDntSEV+zOlF
      JLfTMos+8TvmxGa4pdEuepadHG/ehhGf4K2P5vn8MwceqoWwPFtDTphAkmwwPDSCbpjMTYwQ
      SetbXaQ8Dwk50QMIIRju+JD3r/TjKa7lhWdP4LnRzrzPIN8D5Pk0ORQf4Boa4ekopeWfHQH+
      0+TjA+T5NDnRA6zFIB7L4PG582OAPPdMTowB1pKi8+rQVhciz0NCTkyDWuiMDI0TDQ/hKN27
      1YXJ85CQQz3AEuff+pD28TH6L/esS12eHeXM6dMMTC5gZKJ8eO4c43NRcsy+y3OfyZEewCSR
      cFFdbcNZugvhWP9gg80d5PjxEFcudZOYFew6eJChzh5Ki1ryDnLz3JQcEYDG+Mgw8bjBRKSH
      ioaWdTncqsmZDy7iKalDEXH8LjcFXoWsIZCMfHyAPDcmJwQQnZui9eIlohkNh00hmdLW5VmM
      pdjb3MxgTz+mW2UiPM1CTFCrStikfHyAPDcmJ4wDf3E93/jdrxIq3MY3X/sCmeh6b72qZDA2
      Ok5lQxP79u0lsbDAjqZGbLn1uGye+0wOrQMYnPvFj+iZXGL3sc/xRHNtfh0gz2fS19eHEIKG
      hgbOnz/PzMwMX/nKV7DZVqyCLS7fHaDwxBe+zhMrn/INe57PwjAMpqenkWWZ8vJyxsfH2blz
      J+3t7bS0WOPInDCBItOjjIbH6WgftfZ855gbkDzWfq7W1lb+5V/+BYDu7m7++q//mvb29k07
      p6IoHDp0CFmWcblcLC0t8e6771JeXr6aJyd6ALtd4uxPfsjF1gV2NVZRs/cEXzy5b00vIITA
      NAwkWbEcj5nW+3wwjQeHbdu2MTk5iWmatLW18c1vfhOX6/ZiRNwNQgg0TUPTNBYWFigtLWXn
      zp309vauOuTNCQG4i2r4j3/wv3C4rYuoJmho2rXOBJod66VnZAah+NhZaadraAZXQTmPtzQh
      f4YGstksc3NzlJeXk0wmGR8fp76+Hqcz9/0PPShIkoTf70dRFEzTZGZmhn/6p3/C6/Xy+uuv
      b0qvrus6P/7xj9E0jZKSEkKhEN3d3bz00kvXy3WzQfBA6/uMLKXxhWqpsEfomVjGW1jG0ZYm
      yCa4eOFj0oqf/TsCZDz1lHpudJRPsDxKd6qExrK7VXyM7//XH7N3fyW9sx5+68vH1vUAqeVZ
      BqfjGHqcfdfcozcewMGt3aO3t7dz5coVXn31VX7961/j9XrJZDJ8+UtfQllawnS7EXkx3BNC
      CD7++GN+8Ytf8PnPf55oNMryshU+6+tf//qDFyBDsRfyxFO76bt4hazbxfETh5jpvkRUA310
      gNJ9j1HjU4lPddLe+xHBomKaKtxcbOuhsmEfPlkn4LcxMJOhImBDjUWJ6QFGunsZW9Q4fOww
      7jsK4a4iGTEmJsMovj3rUuOLYSaXsjQ21NPV0YYhTAzTci+jyNe9QijK+ucIDh48SCwWQ1EU
      hBAMDAwQjUb56v5mpDPvofgLEPuaoaQUXC5QlE/5XslzOzQ1NbF9+3YcDgder5elpSX8fv8t
      PXXcM0JY/pUmJ6AwAAVrnTjf9MyJyBRn35shUFKLiE1y7sx7BIrKqbdBOG3gctuRFQmQqNyx
      F21ugGxaYJgm7e0dHNkepHtWJaGlkJMqlUEFNJNkOkN2eYzu0QZatt+JR2kX3/if/oCl5RTB
      osJ1JtDEyACTEY2lSIzd1QHOvPsuoepdOBVpNa8kSTcNAi1JEoqi8LWvfQ1d1/n3f/93ZKcT
      7JZHCOnKZUglweGEQABCxRAsst57vZarjjy35NO+OW97SloIMA3QdBCm9WqaVsXOZqzXTBYM
      DdJp672mQSZtpSWTsDAPdgc0NkJpGXh94HbfXACewgpONjXhAsYG05xobMK34hk7VFfB+2dP
      M+QN0FCp4nG7SdhsRBcWEXY3djNDQUEhHeNjHKpx07boYGeJAUaWheU4Xr8Pod/pY43LXLky
      y+HD5Vy82EvLkd1rRNDYcpLGT3x+rrTuNu+t4PTp03zwwQdMTU2xa9cuPvjgA1588UUor4AX
      XwKHHQwTUilYWoD5BZiehI52K6SQ1wv+AuvGBoMQCFo9RZ71mAaMjcHwEOzYafWkmmZVZF2H
      bPb6XyZr/V/TrAqva1YsBH3ls2Fax7PZwW4DRQWHA2w268/hsH4Hn886jtMF01PQ2WGd1+2+
      +RjANAwkRUFiZUZFUlZ7fSEEhpZFFxJ2mwKSgjANJAmyWR1FVVAVGd0wUWUJwwRVBgMZoWcx
      kFAVG4pyu2ZEmrf//R/42ekxdu0uo/7Q83zu+PqB8GexYQthQqz8ADrEYhAOw+ICzM9ZIjFN
      8HgsIZSUQkmJ1eLY7ZZgHgbESgUU5kql1K1Klk5b9yCdhnjMqsjptNUKp9NWq6zr1j202S2n
      VZJkVV5VsVppu/36n2Pls6JeNz+dK56xr+X5ZByDa+8/+b9rZtC1e2/oEInA/HwurQSnOfOr
      00geN8Hy7TTtqHjwVoKFgGQClpetLjcctipBNGq1SIEgFBZCcYllj3q9sNWDayEgHr9e0a5V
      Fi0LWc16zaxU7HQa0imrMqdS1v+17PVKLskrldgO6koL7HBY1+jxWu/dbqvyRZagsel6w7BF
      JmQOGa5pJqaiHHtyB+6Cz5py2iIkyfqhPV6oqIS9zVb3nUqutjjMzcLIsFVpnE7LdAoWQXm5
      1VMoCixHLVPqs3oLQ79uChjG9ZbV0Feisax4n9Z1K/3a+0/+L5WC0WGr5fV6rYqczVpphn79
      mHa71fI6nVYlLiy0vuN2W+Mir8cSuXwtkJ66Er/gBs1U7ebc/rshhwRgI7YwxLlzSap2H6Us
      tHYALUyDeCyJu8CHbOosLUZw+QtxbWXANkm63k0XFEJt3UosrZVWdzZsiSI8BcODVosKVuUr
      KrLEYJpWZV5T2VcqpmRNQliOSaUb/4HVMq/mWTE5VNU6vhBWS6+q4PdbQnS5rYruclmV2+1e
      e7xr1/YQkEMm0K1ZnB6lt2ucxmdPEO9tYyquoxt2jh3Z9+BHiRTCqvzLEbjaDlOTUFdvDd5k
      2WpNFWXlvWJVVlVdiekrW3O9smy1vpJk2dXySn5Juv49SVo/hStMmJuzKnrBZsZ5ezDJoR4g
      yVv//gvmY/OI8iO89rmWNWOAYHktdUsJAJY0iZaDhxjsaiWtC+zkwAMxsmyNER4/YYnB5drY
      AfO1nse8gV/VwpXpyQf13mwiOSQAG7v2H6BWW+BiZ+KWOSVdI6NpZLKgKBI2OYceiLHbLZNj
      kxFCcP78eex2Oy0tLfzgBz8gFovx9a9/nWAwuOnnf1DIoTk5QccHb/Hdf/oV2/btXJcaHumm
      fXiYto+uUF1dwUfvn8cWrMCRA1cohODy5ct873vfwzRNzpw5w1/+5V/y7rvvbuo5i4uLSafT
      SJLEl770JRobGxkbG9u0cz6I5FAPkCRilPO/fftp3vpwkGO7ytekltU1UvaJ+ABPPV3+6QM8
      0DQ2NjI7O4sQgsOHD3PgwAFOnz69aeeTZZmqqqrVmASdnZ20t7fzta99bdPO+SCSA+3jNdx4
      bIu8+97HBCpLt7owG8q1oBiybEWTWVpa4ty5c5vqHt0wDC5fvkxXVxdDQ0OkUilqamoYGnq0
      nI7lRA9gamnmYxle/MY3iS4tYth9D9UTYUIIzpw5w5tvvolhGPT19eF2u3n//fd5+umnN+28
      Pp+Pw4cP43a7KSsrwzAMdu++88g6uUxOTIOGey8xlCniseY6yIT50a8GefmrTzx4K8F3iRCC
      dDqNrusoioIkSei6jqqqm/rASJ4c6QEKi4vpf+M0JGdYnurHU3V8q4u0oVwzgfLcf3KiBwBB
      fGmOifACDm8h1ZVlqJ/1mNcNeFB7gDxbRw7GB7h7hBDrnjwSQmCa5g0flAFrsLjRaaZp3vTh
      fiEEQoibPrewGeV5lK8xR3qAzeOzfgxN01Z9yHwa0zRv+r1bpV275TeqHKZpIoS4ZcW6m3Pe
      Ku1RvsZHXgCfxa1alc3gswS5GTzK15gXQJ5HmhxaCMuTZ+PJiWnQ+0ImyvsfXSGR0mk6fIix
      1o9ZNmwce/w4fR+fYSlj48gTR+n96DxJHRoOn6ImeC9Tl4LRnjaGphZwBKvZUajT2jdBYcVO
      6v0ZWnvH8JVuo9IRo29yiYLSOlr2bLu3BcDMMucutJJMGew7dojhSxeImg4ee+Ioo20X0II7
      ObSjlI/Pv8dCXOLYM08RdN5LFTEZ7mpjOLyIu6iGOl+G9sEpgpUN1BUYXO6c5OQLp0hODnH1
      6jgHP/8k97whOx3hzIVW0mmTA4+10HfhA2K4eOLEYUauXEAvbmR/XQGXPrxANJFC+bM/+7M/
      u9dzPhQodqqqq7EJDZu2SKZoHwcrXExHJjFduzm+w8VgRId0luKgB8VbTKH7xgPH26WgqIyS
      Ij/pTIZMIsP+xx5naXKEbFan+djjJKfHSegZAsXlxGfCFNXUYL8XBSgOqmqqUIWGQ5snHTrI
      gTKVcNZOU10ZkZRJoTtNPFPMsT0+BmZVygL39shmYaiMkqCPVCZDJpHl4GOPsTgxSt2uJpRM
      Em9xMX5/AEc2iVpczD0/IKo4qK6uQjE0/v/27uWniSgK4PBvCqXDUGqfgNYiGAqWYHnEB+DK
      rQvjH2ncsTYRwUCoQdiApVAopeCAUrFWodBS2hkXDQZhQbRxNefbTTKZOzeZkznn5uReR+WA
      08ADhgImWaOF/k4/+RK0ed0EQyE0pSwp0G+KQWZ9Dbv3Fu0eJ+eVUe17M2tHLVXPsNlV7HYb
      pWK9vfMKhW977Bwc09vTDZdKsfOrcOQ+Tkcjhqlcu8Pd9UMaZJJJVH+QgKvlwkrNn7eZcOV9
      /nFAjg520XNFesPdF57/H8tOxWArmURrD+F3NtemYV7aTNk02E6nMG90Sgp0rvrzM8ubOu79
      HEY0SjnzgTnDweOxR2wszvBOV3k4OshqJsWPvElX9GpL9l8xDdZWVjg0HRwVz7jrbWJ26g2+
      YB+B1hKx6be4b4Yp5r6QSmVw346g1hkAlbzO0uYu3mwOY2iQUjpGzNQYG/czPxdDP67gaBrj
      JBdn8pON0adddc6xwmp8hYKiUiie0eluYHZqEl8oQnYrwXJiDb1Q5o7PzsdEAq1wypORYerJ
      uirfd1hK7+H7msccHuRkY4b3Nifjo23Mzy2gnxg00s9GfJ0Wz76sAglrkxRIWJoEgLA0CQBh
      aRIAwtIkAISlyTKosIT9xAzrZh89Rpqs6x4jXT5AmuGERVTLh7x6OYGtuZXnL54Rj01zpAbl
      DyCsoaGplWjQQUoboLyzwOvFbdxsSw0grELB5enA79JQPR34tUbCAxFJgYR1GNUqpqJgUxQq
      5dpBLRIAwtIkBRKW9guQBpio8HxMfwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Toss winner advanatge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Venue wise highest over bowled' width='192'>
      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
      QI08h7kMPg4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Venue wise highest score' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z5Bc57nf+Tupc5zuyREYYJAzAQIMELMoSqJ4JWu1tq/Kt7burqv2s8tV
      u1/2y35eu/Z6vVX2+t5dS7KteCmKErNIggAIcJBznBlMDt3TOZ307oceDAAhEMT0BKDPr2pq
      us85/fZzZt7/eZ83PY8khBA4ONQp8nIb4OCwnDgCcKhrHAE41DWOABzqGvVeB4VZgczoUtuy
      NLjDWOn0clsBgPCEKE0uji1aQwRjtnZlBzf0QnEG9ELNylw2ZBWjrGEVivcWAJlRzHf/1RJb
      tTRIa18n97t3ltsMAPS+1zn5v/9mUcru/OlbjPzs7ZqV9/LZd5GO/z1ipL9mZS4bvhiTF9vJ
      Hz3iuEAO9Y0jAIe6xhGAQ11z7z7AAvjgzBQDMwV2r46yuSPEOycmKFQs/mpXGyGfyqcXZhic
      KfLypkbKusWG9lCtTXgk5GgTcqwFc/gKru37kYNRjKunsIav4Nr1Irg8mJeOYaemH668WAt2
      dhYMfUF2BTf0Etm5iczpi1jlCsUb44S3bSB97Owjl+ntbEVPpgis7cHWDRr2bqc4MsHMJ1/C
      Ii0MsG3BH05OkMwbfG9HC8lcBZ+7Wv264z5+dnCYkmHx6uYmVjX6ARBCkMjpxIMuJElaFLtq
      LgCXKvE/fKuHd05MUKxY7OqJ0BnzAaCbNlcm8/z1M53YAn53cZxzo1ne2N7C5xcTKLLE8+ti
      XJ8uYNqCqUwFyxaYls2WzjAl3eL0cIY3trcQ8Wk1tVuOtyKHYqCfQT/5GdraHVjDl0GSsLNJ
      zIHzaJueBs2F2rkW4/IJkBVEMY8ciiL0CkgSolxE7exDXbWByrFPwLJA1RDZJNj2N7YrvG09
      Ux98gVWuEN7Sh6elkeLw+ILuVWsIo4UDyF43wrYZ//3H+Fd34u/tpHBteEFl34+ibjGRKfPP
      93WCJDGUKFLULd7c2QpAS9jNvrUx/nxhhophc2wwxRvbWhhOFjEsm+NDaXb1RLk+nSeR03lj
      ezNuVVmwXTV3gYaTJf7Ne1cJelRyZZOwT+P//mSAa1N53KrM93e08rNDI1yfLuBWZda2BBid
      LTGdrfDRuWkGZ4ocvZ6iO+ajbFhUDIutXWEGpgsk8zqDMwUOXUnW1mhFRW5oAQRyJH7XabVj
      LZ4XfoidGEf2hZCCDahrtqF29qG0diMFIiiN7dWfli6QZczBC8jeAHK8FbVtFSiPJtjJdz+l
      8cW9RHZuwtXYQHjbeiozswu6XVlVaHrlWcrjMzD3wC+PTaFFFq819rsVXljfyD8cGGY6U+bA
      pQQeTUaVq0/2E0Np/u6j63THfSTzFSbSZT4+P82NRIkrk3nWtwYBwXS2Qv9AimuTtRmOrbkA
      umJe/smedhRZYm2zn7ePTxDwqLhUGcMSnLqRpsGvUdQtWiMegl4Vw7SZLeg0h90IIdjZE8Gj
      KcQDLmJzP5oiMTBToCfuw7Zr20xLwSggYRdyKB1r7jpvjl7DuHQMXB7khuZ5N8iaGUPp7MOe
      nURpX43aswFME6WpA6VtNcK2UTvWonSte2TbQlv6MPNFFK8HfWaWsV+/T3z/HliAS2CbFsO/
      eIfQ5rWooQCNL+2l6dVnyV8aeOQyv46yYXN+LEvYp1I2bF7b0ozfrXJtqlqRd/REeH1LMyXd
      YmC6SHfchzX3f1ZkibaIByFgIlWms8GLYX3z1vRe1NwFemZtDJcq0x714lZlGkNuDEsQC7iQ
      JXhuXRzdtIkFXJiWjTL3BGiJeJAliaBXBQGqIrGntwEhBJoqs3dNA7tWRSkZFkFPbc0W2Vn0
      /g+rLorqAlPHuHJi7qTAHDgHlgmaG2t8AElzI/Qy2rpdWIMXEPkM+snPwbYR5QJ2JlH9aKmA
      XshUyzUqj2Rb5tQllIAPI52tlmmYJD7/akG+eu78VYRlM/PxYZBltGsBzHwBq1h+5DK/Do8m
      88KGRoQQNPhdrGn2oyoyulmtyN9aH8elypR0iy2dIUq6hX+uj6DIEqoi4XEp/PWznVgCQt7a
      1IGaC8CtVf0yr6v6O+p33XH+dt9dkW/5cPGg+66yXOqtp5xbU3BrEKhx5QfAtm69Nuc6raZx
      65hlVn/PVWKhV38b576cv0QUsrdeF3P3PP4oWKUyVunOimmXH01MNxFm9X5tvXqPlQWW9zBI
      kkQscKsuuOU768nNenOzY3yz8t9ZCET+oj4tFGcY1KGuWTIBJHKV6siQbs4f++WRUf7jp4PM
      ZCv86fQkvzo6Sq5s8uujY7x9fHzeB1w23F60Lc+AyzN/SO3dimvXS9XRoN6tuPa8hhSIoG3e
      h2vfG0ihhgV9pasxSudP36L5uy8gu27rOMsyatC/oLJXEtPZCr/rH8Oc8+V10+a/HRnlHw7c
      IF82eW+uPhQrJu+cmODnh4bJl82vKfWbswj+xP2J+FQqho3PBaZl43cr/GRvB+migRDQFfNx
      5NoszWE3bk1mYLrA2pbAUpp4B5IkIQrZeZ9f8vjA5cYcvozSthpregQ7NVUdQRIC/cs/Lfg7
      VZ+XxIGv0IIBfN3tuOIRhC3InruCp70ZoRv4eztJHT+Pt7UJV1MDs4dOzLszjwuyBB5N4eYz
      TpElvrutmS+vzXJ6OINHU2gKubkymWffmgZuJIvM5Co1d4GXrAWIB93z/t5Nknmdf/v+NS6N
      52gKuWkJuwl5VWayFQ5dSZIuLu8/VZSLiErx1oG5cX+RSyOpLiTNjRxrwRq7huT24t7/FnJj
      +8K+VFFo/f5LRJ/eRiWRwtfTQfPr+/G2NeNpihHatp7C4BiBNd14OlqIPbuLwPrVC/vOZSAe
      dONz36oPsgSnhjMMJYr43QoNARctYQ+6aTOeLmNagq65+aRasmQtwI1Ekf6BNKmCwc6eCLaA
      ppAbTZHxumS+vDqLqsi8vrWZsm4xnauwoS24VObdEykQQelchxxOYg5fAcTceH8b5ug1tE1P
      Y03eQI7EsQtZJMtCct3dmf9GWBZTH3yBr6sNV0MYSVEoDo0iadV/lZ5IUZlOoEWCuONRchev
      I6tL2pDXhMGZAieG0qiKxNrmACCRL1uEvBq5ssn1qQJCCHb0RPjicoKN7SEKFZOQt7YToEv2
      lwt6VF7Z3ISmSJwYSvNsX4zt3RFMy6Y96qU96sWwBE0hN5Yt2NQRWpwRn2+AMCqY106DbaO0
      9mCOXMU4fwRcbkQ2haGXq61CIYtVKSOp2vwQ6KNSGpsCoDg4hqypzHxyGGHZ6OkshcFRQGBX
      dLJnr1Svcanos5ka3O3SEvZqfG9HKy5F4vRwhn1rY2xsrz7wOmNe1rcFsSxB1K8R8KgIAS61
      9g7LktWwhoCLhrlhsJtrPW4f6rp9GLQ7Xvum7pGolLArJQDs2UlgbuK0lJ87NnXbxUVq0WW/
      OUQJYJnmHUOgglsuoV3R0SsLW2e0nNxeH3rm6sPt8zuNt9WHNc2L1w90hkEd6prHz3msE2SP
      m/Z/8jpWuUzqyGli+3fj7Whm6r0DhLdvQPV5Gf3VnzBSC5toq3ccAaxQPK2N2IZBcWCU0vgU
      o//1XRpf3kfuwjVylwaJPbMDUaP1MPWMI4CVihDo00kUr5vgutWYhRLlyRmEgPhzO8mcuoSZ
      zS+3lY89Th9ghVIan0YNB/H1dFAan8bT1kTu/DU8zXFCG9fS8t1voTVEltvMxx6nBVihCN1g
      4u2P59+njpwCoDwxzcD/9fPlMuuJw2kBHOoaRwAOdY0jAIe6xhGAQ13jCMChrnEE4FDXOAJw
      qGscATjUNY4AHOoaRwAOdY0jAIe6xhGAQ13jCMChrnEE4FDXOAJwqGscATjUNc6GGIeHxg7v
      wK5El9uMBSN5/MB1wBGAwzdAP9OPcf7ocpuxYKRwDFgFOAJwqFO869YjSdJ9BCAp4HpyQnHf
      gVLbBAsOjyeTXw2ROHD23gKw8VCxtiy1TUuCZrcstwkOKwA9laUylbi3AEQxj3HqwFLbtCTI
      vuWNOF2PSIEIrm3PUTn8R9Q126r5FowKSmM71sQg5uAFtE17kcNx7Nws5tAFJJcHOzl53zLl
      5i7sqYWndK27PoCQFexN31luMwCQol10/vQttEgQI537+g98Axqe3lrT8u7IVvONP1wdbZf8
      YeRQDLuUQw6EMUeuYo1XM1MKQ6dy+F3U9buQAxHU3q2IQhbj8gm0jXuw09MgK8jRZswrJ5C0
      2riydScAu2LS/7/9ernNuIPOn77FyM/ernm5tSyz71//7YI+b00MoXavRxQy1ah3Z79E7VyL
      1rcD42L/rQttGyQJc/gyksuD0r0O89oplPZecPswzn+JHGtFjjZhjV5b2E2xWBNhigpIoGrV
      37fl2ELVkAKRO4/d/IwkfX1CaaXuNPv4Y9vY+QxSOIY1MwaWida3A6W1BzGXgVPy+HA/811k
      fwg7n0WU8gi9jEgn0LY8i+QLIdIzCNOoZvA0axMaflFqk9q7FZFLgaIg8hm0HS9Q+eJtMA3U
      VZuQAmEkjx+9/6P5dKTq6s3YM2MobasxLtxnrFlRUXs2YF4/uxhmOywSIp9G5NPo0yMA2MmJ
      u64xzhy88zO3vbYmBu84Z41dxxq7XhPbFkUAStsqRC6CfuJT1N6tWKNXkYNR7NQ0wjIxL/aj
      9e1E7VqP0r4ae3ZyPvcugNKzEbVjDcbVU6htqxG2hSgXURrbsTPJxTDZoU5ZFBfImhhEGBUk
      XxB1zTaU9tWoPRsAkFQN944XsGfGkENRKl/+Ccl9W0YYSUKJxEFWUNtXY1eKGGcPI8kylaMf
      IMqFxTD5DppefZbOn/6AwLrVIMs0f+db851AX3c7Xf/ir2h6/Xkk5bYkbx43knLnn9O/tgfZ
      +xeu3iPiaWui4599n+ie2nZu651FaQHszCx2ahq1bRXG6S+wJgZRuqsCsFMzVRfGMhGVIu7d
      r2KOD0C5iNDL2OkEks+PrKhYiQlEpQS2hSgVcO184a7mcDGwSmXGfvUejS/vw8zmUEN+3K1N
      lG6Mofi9TL77GYG+bnzdbQQ39JK7PEjsuV1YhSJT731Bw77t5K8M4mltpDKdxP6LTO+PQvSp
      LSQP9GPknoyQ6GrPRqRgFOPsIQCkYARtwx6MC0cR+QxK51rkaDPGmYMorT0oravQT3xaeztq
      XiJgTw4BYA6enz9m3bhYPTczeuu62Skqf5Fb1yreezjQHLoAQxdqbOm98a3uxL+mm8K1G4S3
      byR/ZYhgXw+lG2PILo22H30bM1+gNDaNt6MFf28Xqf4zFIcniD69ldDWdQT6esheqI2fCjD1
      4UGav/0ctmEy9d7n1CQh2TJijlxB7b012Sry2eqojqyA24t8M+H4XCpabOs+JS0MZ0jlHhQH
      RkgeOgGSRNdfv4ltGHjampAUGVs3GP/tB+jJFNHdWyiOTuJpjmNXdMLb1mNkchSu3aA0NoUa
      qF2yv8CaLsxcATVUTSn62CvAMu+8BWEj5iq5tv4pJFVDjrWCoiDJCnK8rTpyqC+8Nb2dpRWA
      olZv/Pb3kjQ/EnTH+b+8dglJ9Z8FIUAIRn/1Hna5gux1Iyyb/NWh+dRE6ZMXcDfFSOaLWMUy
      rvEZ9MQs7qYYVqmMVapg67UZrstfG0ZPZTFS1XH0xx1t095qC2CbiGIOYRq4tj2PKBfQTx5A
      crlRFQ3z6mkklwdNc9+qJzVkyQQgN7ajrd2OfvIzRKkALjeurc8hefwY5w4jAM/zb1F67z8j
      NzTh3vMapXf/fqnMuwP7tvSjdrk6OmWXqr+FcUuUwrQoj0/Pv69MzgDccaxmNpUrlMemvv7C
      xwTj/JFqzmVVQ2npxp4YovzBrcQfAtAT4/OvK0feWxQ7lmxHmD0zhjly9dYBvYJ+8jOsxDhC
      r6C292KNXEFSVZRYK9bE0FKZ5rCcmEZNZnQfleXrA8gKat9OzIFzyKEGlM51yP4geHzIwShy
      tAlz8MJ8gurlRouGaH3zZcoT06RPXqDley9SGpnEzOQIrO/F1g3GfvWnJ8I9qSeWTABK+2q0
      tduwm7uwpkcQlRJKUwdypBHj/BHK7/9nlK4+rLEBsEzUVZtWTOUH8Ha2Mv3hQcoTM4Q2r2X6
      w0PzLknm7GUa9u1wKv9jRGTHxgdsiFkErLGBauUG5FgLdnKSyl8sZ7WGr8y/vn0IdSVg5os0
      vfYcVqFE5uxlml59FqtQZOw37xPa3Ef2/NWvL8RhxVAcGiVz5vLyRIV40DrvlYokSeQvVyfh
      ZE0jf2kASVFQPB7UgA99JrXMFjp8Ex64IcbhboojEyBL5C4PYBVKeLvbyV28jq0bpL4647g/
      jymOAB4SoRsUrt6Yf1+4OjT/2iouziylw+LjBMZyqGscATjUNY4AHOoaRwAOdY0jAIe6xhGA
      Q11Td8OgkqbS+dO3ltuMO5BkablNqFvqTgDCMBclBs9CWGmCrCccF8ihrnEE4FDXOAJwqGvq
      rg9wL1b9z/8Mu6KTOXUJVyzC9MeHiD//FKmvzhLo66GSSGGVynham7AKRYo3xmnYu53Zo6er
      sSzrBP9P/xcQT8L9SuwQEsK2HQEAZM9dJXPqItHdW9CTadyNMRSfF6tUBllGkqqjNO6mBuLP
      f5vEga9wNUTp+us3yZy+hBLw4e9uZ/rPXxLfvxvF42bqw0M0vrQXWVOZeu8AseefQlg2E+98
      8tiKxtZHEUZ2uc2oKY4AgMj29cT372boP/wSJInonq0Ub4wBIEwT2aWhAnoyzcyfvyR5+CTx
      53Yx8YeTxPfvRgsH0RrCBNf3Uhqbojg0hrezhdLIBKXRSfy9XbiiITztzUx/dBCrUFreG35E
      jOn3sLKnl9uMmuL0AYDEgX4G/v0v8HW3oSdSaCE/hevV3Wr5azeI7d9N06vPUrg+guL3EX/+
      KfRUBmFaGOkstmGiz2Ywc3ki2zfQ+OLTlG6ME9m5idizuygOj2ObFqWRScRj+vR/UrlnCyD7
      Q7j2rowkErVGal9317HMqUsApGarUadHfvGH+XN2qcLw//u7+ffTH3xxx2fTx8/D8er2TUlR
      0GczFAdHQZaZ/MOfKQxUIyLfXobDyuHeOcIKWfSj7y+1LUuCunvxGj1hWdXKD2Db85X/64ju
      rn0+tuD61TWdYJNdGk/itp/79wGe1C1+K/C+Uv1nV9zs9F+y0AwxteCrM1NsXRdjfLqIpspE
      Qi4mpovYQuBxKfR0hABIZSrMZsr0doVJpstMTBfweTVWd4buKtPpBH8DWn/wMkauAAJ8Xa3k
      Ll5H8bjx9XZSGplk5uPDy23iE43PozI8kWdkPM/urU2Yps3QWJZCyeS7L3Tzx8+GANi+Ic6H
      B0dojifYvaWZdE6noltwDwE4neCHxNPWhFUsI3QDLeQnf/UGgb4eUBSKAyPYeu3jVjrcSd+q
      CGcvJzEtm6C/mq/h8kAaTZUZHMkSj3ppiHgYHM2xoTdKLOKhVKmGshwYuffwbW1aAFlB27Ab
      LBNz5Cra5r3Ys1PVwKYeH9r255FkBXPw/ANDHsrh+FwGmKqbIgUiYBng8iCWMzOMJNH2o2+D
      bSN73Nz4T7/GFW/A29mCrCqUxhL4VnUsn311gktTyBUMOlsDc3MzEs/ubMUwLaZnS5y6mEAC
      XtzbgWXbFEsmksTcz71X3NZEAEpTB6JcxJoZRQpGMK+cQo7EkeOt2IlxjPNH53LCDiFHGhGA
      yGeqMeBtCzuTQG5sR2ldhbhyElEuIrm9yNEmRLmAHI5hVcoIy0COtSJyKYShI3kDiHx68aNI
      C8HA3/0MNRTA39uFt7OV6J6tzB4+iSseJbp7C6VFDFzrW9WJnkzhagiDALNQxBWLVIPwShKt
      b76EVaow9d4BrOLcHIMsIbtdSJKEFg1RHqt9wN7l4G9+uH7+dTTsJhpunH///FNt9/zM2u7I
      fcuriQCs5CRacxdatBFz7DrahqcQlok1PXrHdVKoAfcLPwJJxjh3GMkbQNJc1ae+oiCpGkr3
      eqwbl9DW7cSaC6Cl9mwEScaavIF7z6uIYr7akkgSxqVjtbiFh8LM5smcrCbpyJ69FcUu+cXi
      2mBksjTs2YqkaWTPX8XX1YYWDZG/MoS7sYHUsbMI3SS4fhVqOISZyYKiEHt2J9MfHSK4vpfK
      zCypo6eJ799NeSpBaWSS8NZ16KkM2TOXF9X+lUxN+gCS5sYaH0SUS0huH+boNaiUEEblzutU
      DWv4MvrR9xCVEubgeezZKSSPt5pAzzRACOSG5qr7M4eVGEfy+FCaOjHOH62mz6wUq5V/EWLG
      rzSM2QxqOEju4jWEZdH02nNUppPVES1ZoumVZ4nt300lmcbX2ULTt59HT6RIHz9PZWa22irY
      Nq5YBG93G20/eAX/qg6MTA5vR8ty396yUpMWQBgVlEgMOzmBlZwAYWNN3kDSXNXKWspjTd5A
      FHNYvhCSx199r5expoYRho66alP1WCaJ0tWHceVE1dWxLEQhV802btsoHb0Yl44j8pllS6Cx
      HBSHx6lMJdEawoz/9gN8qzspDU+ALZj++BD5S4N42puxyhUqU0ls3cDf20V5MkFptNqSuuJR
      rEIJfTaDbZqUJ2ZQw4FlvrNvhm5YfHJ4lLYmP9s2xAE4fSnB0dNTbOmLkcnpDE/k8LpVfvrW
      Ov702RCdrQG2rIvfs7zadIKNCubVu9eIiJvpbEyj+nQHrNE7g8jePG5eOTF/zLxy8t7l3ONc
      vZA9cxlbN7AnE1SkqiCEbSPyBfRUBqgm5kh+cQyromOkc0y9fwAzV8C+mdTDstETKeyyjpEv
      IEyL1NEzy3hX3xxFkdncF2Ny5la20IHhLG++1MOR01O89cpqJqYLDE/kGZvKky+aZPL39xKc
      YdDHBLuigxDVFtG0sCt6NVuNZd/KWiME5YkZjNkM2DaVyQRWoYTQjeqPVc1oo8+mEbpRzeBe
      rjz4i1cYiixVh0BvG9SJRT18dGgUl6YghOD4+Rm2rY/x/hfD+LwqY1N5bPveE6BLNxGmqCgd
      a6stwJzrIjc0gyRjJydQutYhByMYV06irdmGAMyL/TU3Q9JU2n/8es3LXQjOpviHp1gyePvj
      QUYmckRDHmQZkukyti1IpstMJUvEIh40VWbf9hZGJh6cVnbpcoSF40heH5LLjSiZIMlIwSiS
      qmGnpsE0sPNZlHgb5th1lNZV83kEaokwTCb+UPt8swuh/cdP5sLDxcDrUfnJG2sAmE6WqOgW
      b768Cl23cGnVvRtNDV5kWWLjmgY29EaxBcj3ecgsmQDs2Ukk/21T0cLGGhtA7eqrzgUUMijN
      3Zhj11B7NqA0dWAOnFscWx6zZt/hFpIk4fVUq213e3D++M1j97peeUADu6Qpklyb92HNTmJe
      O4PQy2gbdlcn0YwKrm3PY6dnEIUMcmMHaG4kr/+uoVQHh1qypCmSSnMpkpSuPuzUFPpXH86f
      L92WQdIaq12G9ccBX1crkac2L7cZD0RSlOU2YVFYltWgt+cCcwBbNx6DbZIrbxl5LXCWQ68A
      ypMJchdXdqsnrCdzK6czD+BQ1zgCcKhrHAE8BrgaIkR3b0EN+vGv7Sa6ZyuK3wuAFg2DLONp
      b0ZSFbTI3bueHO6PI4CVjiIT2/8UZr6IKx4l0NeDVSwT378bgEBfD1okSMv3XsTT1lzdYC9J
      MDfxE96xEUmr7p66eWx+l8hfvq5DnE7wSmduAVt0z1amPjiIJMtIqjK/wK0yncS/uovi0Cie
      tiZs3SD61BZavv8is0dOEdrch7e9GSSJwNpuJn7/MfFv7QFJIvXVGWLP7wbbZuS/vouZyS3z
      zS49jgBWOpJE7vIgmdOXiO/fjaSqhLdvmN+EU5mZpfn1/Uy8/RGNrzxD+tg5vF1tJD47irsl
      TuroaWaPnMLT1oQkSQQ3rCF34RpmoYQrFmXmk8NImvrEjvN/HY4AVjwCX3cbgTXdTH90CMXn
      oTw+jX9NN5KiYOWLZM9epjyVIHf+anWZtBAE+3pIn7iA0A0aX9xLcWgUxetm6oODhLetxxMK
      MHvkNLKqgiLd2kpZZzgCWOkISB87R/rY3LqoudgA+cuD85ckDx4HIH2iul0zf2mA/KWB+fM3
      A3Tl5o4lPv9qsa1+bHA6wQ51jSMAh7rGEYBDXeMIwKGucQTgUNdIQtwdLlmYJiKfWg57Fh+X
      l0q6uNxW3IHq92Ku8OXQnpY4ldG/x8qeXW5Tasq9h0GFCXpiiU2pLUKJUJmaXW4zvhY1GiV/
      7UZNw7arQT/CsLDK5a+/+CFxN8XQck2osz01K3MlcG8BZMew3vtfl9iU2lIOv8rIf/z9cpvx
      tUS+/R3O/tt3EGbt0k807N1OJZGicO1Gzcp8+ey7SFPnECO1j9SxnDh9AIe6xhGAQ13jCMBh
      xSOEoGJYZEsGumkjhMCwbKy5aG+mZZPMVSjq93cjy8a9z9VkLZBp2Xx4bpqx2RIvb2pidZOf
      8VSJ989ME/Kq/GBXK5pyb60Zls3VyTwb20NUDIvBmSLr24LYQjCZLtMW9dbCxHuixhvnorJJ
      SG43QteRVBW7XMLK5oi88irIEtlDB7HS6eqHJAnZ56tmimlqQh8bfeB3LJRAXw/R3VvJXR6k
      NDoxv7Bt9stTj1RebP9uymNTFG+M0f7j7zD1p89xNTYgTBNbN6o5B1YYtoBfHB6hOezB71Z4
      ureBM8MZmsNuuuM+fts/jgA6oh6eu08Q3N8fn+Ane+9OYlITAYzMlgh5VV7d341pCYQQHBtM
      88PdbbhUmbJu8csTo6xpDtAd93LgUpKoX2Mmp/P6liYOXEpwfjTHK5sb+fxSgtPDGb6/s5WJ
      dBnLFlyZzLNvTQM+d23X7lm5LIGndiMpKoWzp3E1t6LF42QPH0RyuSgPDVIZvoFvUzVkiSTL
      GMkk4W+9QPbQQVztHXjX9pH98jCBXbsQuk7x0kX8m7ciTIP88WMLHt0Jbe5j5vOjGKkcsWd2
      MPHOnxHGo4eEl1UFf28nZqGIp7UJ2e3C29mC4vUw9f6BBdm6WGSKBj2NPl7a2CMw8sgAABPr
      SURBVMS7Jyf4fz4bYiJd5n96sQfdtPG5FZrDHtIFncGZAu+fmWJNcwBVlti1KsKFsWp6pMsT
      OT69mKCv2c9Lm5qAGrlAhbJJg9/F7/rH+fOFGQTVJ3uhbPJ/fnCNyUyFimHzwZkpLo7l2NMb
      ZbZg8OzaBq5OFeiO+9jWFeLUjQzxoIveZj/TmQpDiSKHr87SHffVvPIDiEoFu1RCHx8Dyyaw
      cydWIQ+2jQT4t24j8vIr6GNjyF4vnrV92KUiuSNfUhkcxC7kKV2/iqu1Fdnrw7txE+6ubsxM
      GmHbSOrCbZ7842dEdm4ivv8pUGSsYmlB+cisUhkEBNb2kL86CJJEw55t1Wh59wkgu9x4XQqZ
      oklJtwh5Nf72hR5+sLMVAEWRyJVMdnaHsYVgdLaEZQn6B1LEgy4+ODtNW6TqRXxxOUlZtyhU
      brlDNRFAZ8zHwctJyoaF360gAa0RD++fnSLk1UjkK1hC4PeoIEHEp9EUdOPRFGQJBmeKfH4p
      QUPARXPo1nGAxpCLnrivFmbeE3N2FjNZnfPIHTkCQqC1tCCAwpnTzL7ze8xMBiUUwspmkWQF
      T+8aXB0dmOk0QteRPR4Uvx+7UECSZMxUCqHrNbEvvG39/C4wfXqWjp+8QXTv9gWVWRwex9fT
      gZHJgxDMfHYUq1TG19NeE5trjUeTiQVcfHB2iljQhSJLxIIu/G4VVZZZ1xrgP31+A1mSiAVc
      eF0K27vD9LUGmUiV6Ih56Yp5eWFDHLcmE5lLsAf3mwlOXsd89189tIFCCCqmTdmwCbgVVEXG
      FoJ82USWJLwuhXzZxKXKqIqEIktYtkCRJWxbUDZsBOB3K9i2QJIkJMC0BZIEqizdN8nZ/Xjo
      eQBZrropguqeWSGqxyxrPikHgOzxIISo9hPcbrAshGXNuTgSssddjddvVLPcIEnzn30QXzcP
      IGkqiseNVSojLBvF70UYZjVc+n140DyApCjV1klTwbYRlo0ky9VjioIw75105OWz7yId/7vH
      ah7g6PVZ2iIeOmP3f4DWxK+QJAmPpuDRbm2rkyWJkPeW0sI+7Y7PyHMRS2VFInBbB1m+LZKp
      aynCht9eSW+6AJZ11zn7tllVcdcMq8Au/cVShhrN7ArDxDRuVUorv7BlHGLu3sRtbtT8sftU
      /seVp3sbvvYaZxjU4bHDnhsGvYkQgrJhUTEshBDz528On1oP6NssqgAm0iV+89UYhlk1Nlcy
      +PmhYX5xeISZbIWfHxrmT6cnKVRMfnZwmHdOTGCuoBB83r51RL/zXbTWaocruO8Z1HgjnjVr
      ibz+Bko4vMwW1h9CCI5cm+XvP7/l3k2ky/yb96/xx1NTCAEHLiX4dx9e5/JEnv/w6RA/Ozh8
      33q1qAJwqQoRnzavQI+m8KPd7YS9KoeuJtneHcHvVjl0Jcm61gBhr8pkZoWEQ5dltNZWMgcP
      4O7uQWtuQQmFUYJBXK2t5I4cxrNq9XJbWXdIksQza2Osbrrl12eKBrIksarRR6poYNmCtqiX
      8XSZv9nfTVfcS75y7z7WogogFnDhVm99habKfHE5QbposG9NA+dHsxy+mqQr5mNwpsjBK0kK
      lRXihwqBXSwS/taL2MUivs1bMJMJlGAQu1SqjvjUYJjTYeF0x338y5dWcXY0yzsnJjg9nOHA
      pQSpvE5JtygbNupyZIi5MpHjy2uzGJZNX2sQyxaU5nyyqUyFoFelMeimOewm4FFpCLjoaFi8
      md9vhCyjBIOYyQRqQwxjegp3RydmJo3s9hDa/y0qw8PLbWXdYQvBR2en6R9MzaVJluhrDfDh
      2WnCXpUf7W5HliW+uJxgY1uQ3/SPs6bZj99977hHiyqA5rCHf7qvA02VOTmU5sWNjexZ3YAq
      S0QDLuJBF8/3xQl4FHZ0h3l+XQyfa4UEaLIssocOogQCmJkMmCbFC+eB6oywEghg3lwe4bBk
      yJLEt7c28+2tzZQNi5lshY4GL3/7Qs8d1z0/tyTiX7606oHlLaoAwj5tfvjzO9uqGclbI7cq
      +O3rfBZzzc+jIioVzMptfZKbw4WWhZl6QnfMPUZ4NOWBY/wPgzMM6lDXOAJwqGscATjUNY4A
      HOoaRwAOdY0jAIe6xhGAQ13jCMChrnEE4FDXOAJwqGscATjUNc56XoeHRl7/Xejcs9xm1BRH
      AA4PTWlGYMyszNApj8oTKwAl1kjw1e8utxlfi2fjZuCd5TbjoUj+/h/JHz2y3GbUlCdWAPkb
      U5z/P3673GZ8LR3/dIVsAa1TnE6wQ13jCMChrnEE4LB0KAq+zVsA8G3ajKRpuLu6iX7vTYLP
      PHvHpd5166rR9RaZJ7YP8DC0vvkSk+8dQAsFiOzaTO7idSpTCQJ9q8hduo67uZGml/dSnkww
      88mX8xHU7oW/t4vCdWeT/AOxLCS3G9nvRwkGEYaB2tCAPjJM6eoV1IYYgV1PUbxwDq21Hfeq
      1ZQuXEBYFpLLhTANhGHgXbceUdHJnzpB8Ol9SLJM5sBntyL6fQPqWgDulka8na34utpwxSK4
      m2Mofi+K34MwLdSAl6n3v8C3qgP/mi68na3kLw1g6waBvh5Ko1PoyRTRPVtRfF6MdJbwtvWk
      jp9HkiWsYhnZ7cLM5pf7VlcMZjKJt289xswMUA1A7OldU63ILheyx4NnTR92uUTheD/uVatR
      fNV9v8K2qdy4geIP4Oprx0ynKF+9grunpxrf9BEEUNcuUGl0Em9rE4rXjZHJIWsqLa/vp3hj
      HADZpdH2w9cI9PUgLJvQprW0vPkSoa3rqEwlCaxbRcOzO8lfGcSuVGj70beJ7N5C44tPE9m5
      ifDWdUjqColysULQx8fwbdhA5UY1spt3bR/evnUggT4xDhKYs0nsfB5bN+ZD2FulEpLmwp6L
      xm0VCtjFIoGn9+JZ3fvI9tR1C2AViribGiiOTuJubMA2TIZ//nuie7Yy/dEhbN1g/HcfUplO
      Ent2J9lzV/B2tGCXKxQGR3C3xlEDfnxd7cgeN3oiRe7CNYojE7jjUXyrOkn1P1l5dReK0HVm
      /svP59+XLl+idPnS/PvimdN3XH/7uZskf/cbAJRIBLtUwpyZfuTAvnUtgFT/WSRFwSpXkN0u
      hGlhV3SSB/oRlk1xcBQxF1My1X8WT3sz6ZMXsMsVhGmRPnYOAHdznMy5KwjTxNPSiJHKEt21
      mczJCw9lR+df/2D+e2qB4qu6cA37dtSsTNmlff1FS4yVTpN+/08LKqOuBWAVb4U5t24LQW7O
      hSC39dvCo+sGxcE784Hd/Pztx292hMd/9+FD2zHy89/XNE/wYtD3r/92uU1YFOpaAA4rCEki
      sOdptFic/PH+akDipmaK58/hammZy912CDOZrOnXOgJ4AL6edmL7d5O/PIisqfhWd2LMZshe
      uEZ09xYSn/dTmZxZbjOfDBQF2esjf6wf77p15Pv7cXV2ovj9FE6dxN2zCqTaj9nU9SjQ1+Fp
      aWTi9x+TOnqa5MHjTPzjR+izGSLbNzD5h0+J7Ny03CY+OZgm5SuXcPesQnJ7kP0+tFgcu1JB
      9vtRo1GEUZu8a7dzzxbAIkRGeqXmX7aUmFLjgsuwTZO2H75GaWSSmY8PE9zQS/7yAEYqQ+tb
      r6AF/SBRzS+2BPjXdhN//ikK10cw8wXSJy8SfWoz2QvXsEsVWr73Alo4SPrEebLnrt71eUlR
      iD23k8TnKzPPl9bcgruzk3z/V/g2b0EJhRG2hbujAyUYQnK5av6d9xSAkUoz/cvHY4nu/fDu
      f2PBZVilMplTl/B1tyG7XagBP3oyjex2URwaRfF6lqzyA/hXd3Lj//tHsGyav7Of8JY+/L1d
      5C4N4G6KURyewJi9iFksE1zfS2TXJhJfHEMN+iiNTuGKhFB8Xvxruog+tYXEgf4VlRi7cPIE
      hZMnAKgM353gbzFwXKAHUBqZRFgW0x8fRtg2s0er2dntio6RyZE4sIxPUllCUhUkWb71Xqpm
      qwxvXTc/qx3eug53U5zwlnXVHMGyTNNrz6H4vPhW3Z05vd5wOsEPwMzmyZ65PP/+5lCpnkyj
      J5c+N0BxcJTuv/khhWvDVKaSpE9eRFLV6hKBqQQNe7ejBv0Urt5ADfqxKzpWqUL+8gCNL+1j
      9ugprEKJ4sAI7uY4Zia35Pew0nAE8BiRvzJE/srQHcdSR2/NnI7/9oN7fq7xpb3MfHoEYZgk
      Pju6mCY+dixYAN71G/CuW4et6xTPnAFZxpicwLdxE4XTpwg8vZf80SP4Nm+hPDQIQiBpLhS/
      D31srBb34PA1zPz5ydrGWEsW3gJIEukP3se3eQt2uYS7ZxWy240+OQGA7PZUL3O7CT69D62x
      kdyRL/Fv34G1IUf+WD/BPXvRJ8ax8jm8fevRJyewCwU8vWvQx8aw8jl8GzaSP3kCY65cB4da
      sGABSKpK7Mc/QR8bxUyl8PSuxdXaSvb6tTuv0zSKF8/DORthmhQvnEP2eNGiDUguDf+WrRTO
      nSX7xef4tmxDdrnIfPZnArueQvZ6kFwavo0byTykANwtjXT89yt/U3x0z1bGfv3ecptRtyxY
      AHaxSPI3v8K7bn01cVwygdbcDELMnS/Q8IO/Qh8fR+gGoeeeJ3/sK6x8HmwBioIkyZiZDLLb
      TeTV19AnJ0GWiX77dfSJCZBlhG5gl0oPbVdlOsHYb+7tE68knFSry8uC//rluSd94dRJAKxs
      dv4YQP5YPxy7NVw4+/bv5l8bN8u4Vp20cXV2Ujh5AmGauLt7yPd/BfYjrpK0xSMvkV1KHmUT
      h0PtWFGPH31kZP515cbQ8hnicE8Unw8lGFxuM2rKihKAw8pGD3RRanh4N/RxYEkEIPt8hF94
      EWFaZL84QPjFl0CWyXzyEcFnnkNSVdIff/hIm5prhaSpaJEgsqZRHp/G29lKeXwKkHDFIti6
      gaQo6MlqfmA14Ed2a6hBP8Wh+hjOTfWfZfqjQ8ttRk1ZEgEooTBGIgFC4Nu6ldKVSwjLwrNm
      LcI0qhnYl9kXlt0uvJ2tqAEf5fFpght6qUwnQZLwr+nGFQ0x/fFhfD3t8zvItEgIX3cbtmEi
      bBtJkkCSKI9NfaPv7vznbyIeta+zRKzEHWG1YEkEYExOVHf796zCLhWroz+iujpR1lx416xB
      1rQlWwD1IHydbfh++hbejhYSn3+FJEk0vfoMUx98AZJE65sv426KceMfboVddEXDCMui5Xsv
      kj5x4RsLYOQX7zwGO8L+x+U2YVFYksVwkqbh6e1F9vsonDmDb9Nm/Fu3Ubp2FSQJNRbHzGSW
      wpR7Ins9BHq7kCSJ4sg4Iz97m/Tx6n5fIQTTHxzE1RDB191G/toNiiMTSNqdzw7bMJn55EsC
      fd0gO2sM74UWDaM1hOcDXil+L8jV15Kmgiwje1zVRX6qMn9uMVmSFkAYBplPPp5/P/uH38+/
      Tn+0/GP1qteDEvCT+uo0WigAQObURey5xW+5SwPYFR01HMRI5yiNTFAerc5VVKaSWMUS2DZa
      NMTs4ZOPPnT7hNP2w9fQkyn0RJrk4RO0/3dvMHv4BPnLg/g6W5FdGv61PVXXUwhylwYWPaaS
      MwoE6LNpZg8dr76eW+VZmb6199RIZ4Hq/oC/3AJ5+z8ovUghUCRNBSHm3SRJq64AZS6ShKQq
      IKqBo25OQK5E8leHSB7op+V7L+KOR8mdu4Kvp4P85UHKkwmiT2/FzBdQA36EaSK7NLr+5ofo
      yTTFwVG8nS0oPi9aOEj2/FW0cBBvZyuJz47SsG8Hhes3mP3y1DeyyRHACkcNBej6F29h5Usk
      Pv8KX0877pZGKpMzzHxWfR9//inMbJ7i8ASF68Pzgl2JKD4PyDLBTWsIbe5D9XtJfHoEq1zB
      3RSjcHUId1Mcy7ZxNUQACG9dR2lkgvSxcwQ29jL5hz8T3bOVhqe3kb8+jBrwUbg+/I0rPzgC
      eCC+1Z1Etm8gd/E6nrYmtHCQwsAI7qYYasBH7vIgufN3bz2sKUKQPHgcPZnG19kGsszskVN4
      25uBudluWSJ38TqK30fbj15DT2ZI9Z+h8aV9FK4NIWyBt7MFI5XD29FcDSNo20y9f4DYs7sA
      mHj3U4RuPNiWBeJta8L75sskPv8KV7yBwX//C7wdLajBAHoyRWl0ktL4DFapmjPByGSxdYPM
      6UvoiRRmsURlMoGwbcoTMyS+6MfT1oyRzqI/ougdATwAf087M58dxcwVKAyO4mlrwtUQJvFF
      P76u6jbJRUeSaHrlWZAkBv7dz2h8cR/l8Sl8Xa1IikJ5YoaxX/6J+AtPY2YLjP/jRwQ39FZ9
      alUhsmMTuUsDTL13gPC29Yz95n0i2zdQnpzB09qIGg7iaYmjHehHT6QW9VZG/9sf51+XJ6qu
      5M0wlACzh+a2Q97mZo7+lz/cUUb+8iBQjb9Ui2DEjgAegOL10Pr9l0h9dYbcxev4utuZPXIS
      u1zB09rI7NHTX1/IArENg/HffoBVruDtaqMwOEL7j99AT6YQlo2ntZHGF57GyOQoT85gVwyM
      2QzIEla5QnlyhvJk9amqz2YQhkklmcYslBC2qIZ5vD6MvchP/5WKI4D7IUvkLl3HzBVp2LeD
      0vg0drmCXaqgRUNYperrxcYuVSgMzK2RmtvAnrtwa7FheWyKkV/cGcAgd/F69ff5O5ek5y8N
      3PEbuCvaXb3hDFjfD1sgbFENlPvJYWSXRvrEeaC6hDlz6uIyG+hQC5wW4AEUB0fnn5DWXLxQ
      AH1mdrlMcqgxTgvgUNc4AnCoaxwBONQ1jgAc6hpJiLsXj9iVynxYk8cV2RekMrt8K0wfFi0c
      wsjmVvQaHoDAmm7KkwnMfGG5Takp/z9zKJWfiG7JXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Year wise runs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='win % baased on toss decision' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAX50lEQVR4nO3da3Bb553f8e+5ASBuJMGrSIkWRV0oMZKT2Np1tlKcjsZJtt02Gb/o7rTd
      dHc87Xra7WW6O9MXnem4ne7OZGan01tetN2+SrxJG+1mrcSxVlLjrGLHlpTIkihSongTrwAJ
      gLgROADOrS8UwmIk27yABIHzfF5RJM/BHxB/5znnOc95HslxHAdBcCm51gUIQi2JAAiuJgIg
      uJoIgOBqIgCCq4kACK4mAiC4mgiA4GoiAIKriQAIriYCILiaCIDgaiIAgquJAAiuJgIguJoI
      gOBqIgCCq4kACK4mAiC4mgiA4GoiAIKriQAIriYCILiaWusCHiemKNo8SZJqXUJd21MBADBN
      s9Yl1BVN02pdQl0Tp0CCq4kACK4mAiC4mgiA4Gp1HwDbtkkmk1ve3nEchoeHP/Lny8vL2LZd
      +beu62QymQ3te2xsjNdff53Z2Vmy2ey6n12+fLny9cTEBNPT05usXKiGPdcLtFkrKytcu3aN
      Y8eO0dTUxNzcHD09PaiqytzcHP39/WSzWZLJJENDQwSDwcq2S0tLPHz4kEKhQDab5f79+7S2
      ttLd3c3o6CidnZ1IkkSxWGRkZIRQKERPTw+maTI7O8vi4iJ9fX0UCgXS6TQej4eBgQHK5TLh
      cJh3330XTdMwDANd1xkdHWVxcZEzZ85g2za6rvP222+zsLDAuXPnavgpulfdtwCRSITBwUEO
      Hz5MIpHg9OnTrKysoOs6lmWhKAq6rgMgyx++3bWW47nnniMSiTA1NUWxWGR6epqpqSlOnTpF
      X18f2WwWy7IoFosoikK5XKZYLJJKpTh9+jTxeBxd1xkaGsJxHAKBAK2trSiKwqc//Wm+/OUv
      Y5omiUSC69evk8vl+OCDDwCYn59ncHCQF198sSafndAALQBALpcjk8ngOA7RaBTbtgmHw3i9
      XqLRKO3t7RQKBZaXlzl48CDw6AaSZVksLS1RKBTo7OykubkZr9dLPp8nGo3S0tICPArOoUOH
      mJ+fr3zPsiyi0SgAiqKgqiqSJGEYBrZt4/V619WoaRr9/f0MDg7i9/u5e/cuqqoyMzODYRgM
      DAzs3gcmVEh7aYUYx3E2fSPMcRzS6TSmaRIOh4nFYnR2dmJZFolEgu7ubnRdJ5fLEQ6HWVxc
      BMDn87Fv3z6Wl5cJh8OVn3m9Xtra2ojFYvj9fjRNw+fzEY1GCQQChEIhbNvGcRyWlpbo7u7G
      NE2ampooFApomoZpmgQCAXK5HF6vF9M0kSSJ1dVV5ufnGRgYwDRNWlpamJycxHEcDhw4QFNT
      06Y/M3EjbHvqPgCbYZomhUIBeHTU9vv9dT+UQARge1wVgEYkArA9dX8R/LhkMsnDhw+3NKgu
      nU6v6+7cDNu2N9w1KuwtdRGApaUlrl69SiwWY2ZmhmKxCDxqMYrFIrquY5omY2NjtLa24jgO
      N2/e5MKFC9y4cQPTNMnn8xiGUQmJYRiUSiXy+TyO4zA/P4/jOOi6zve//32KxSKFQoELFy5U
      ujELhQKWZTE6Oko+n8e2bfL5PMVikfn5efL5PJZlravdNE0cx6FUKlVauMXFRUzTRNf1yn6K
      xSKrq6vYto1pmpWvDcOgWCw+sV+hOuqiF0jXdU6cOMHCwgLFYpFMJsPJkyfJZDKMj4/jOA69
      vb1kMhmy2SzhcJjPfOYzeL1ejh8/zuTkZCUAkUiEWCxGOBwmlUqRSqXo7e1d93rd3d3EYjEk
      SaKtrQ3LspiZmSGVSjEwMEAsFsPr9eI4Drlcjvb2duLxOIZh0NTUxLFjxyr7mp6epqurixs3
      bnD69Gmi0SimaeLxeLhz5w4ej4ejR48yPDxMOBymq6ur0vUaDAaJx+NomsbQ0BCKouz2R9/w
      6qIFaG9v5+HDh0iSRGtrK4FAAMMwyGazHDlyhIGBAWzbpre3lwMHDqy7sF07+p46dYqmpiZa
      W1sZGBggFAqRyWQolUqk0+l1r9fc3Ew6naZQKBAOhymXy2Qymcq9hb6+Pvr7+ymXy5w6dYqu
      ri66uroYGhp64kgdiUSYnZ2lq6uLqakpOjs7gUfdsAMDAzzzzDNYlsX+/fs5fvw4uq6ztLSE
      ruuUy2V8Ph/PPvssPp9v5z9oF6qLAASDQfbv309/fz+GYRCPx1FVlY6ODu7du8fY2BhtbW14
      PJ5122mahiRJtLS08P7772NZFn6/n8nJSZaWliiVSmiahqZplW0lScLj8RAKhfB4PPh8vsqp
      iNfrRVGUyp3hcDjMtWvXiMVieDyeyraPa21tJR6Pc+jQIVZWVmhubkbTNGRZRlVVVFVFUZRK
      rT6fj56eHhzHwev1NkRP1V4meoGqrFQqcffuXUzTRFEUPvWpT+3o0Vv0Am2PCECdEwHYnro4
      BdqLyuVyVXpm1nqyhNpoiAAYhsHMzMyGf99xHMbHxxkZGeHevXvr+v+Xl5fJ5XLAoz/yubm5
      p24/MTFR6TaNx+Pbqn96ehrDMLa1D2FrlNdee+21WhfxuI3ejDJNk9HRURKJBK2trZUxPcPD
      w1iWhSzLTExMsLi4SGdnJ3Nzc4yPj+P3+/H5fHi9XmKxGP39/ZimyZ07d3Ach3K5zNTUFLqu
      EwqFSCQS+P1+hoeH0TQNv99PNpvFtm0ikQiTk5PEYjF6enooFArcuXMHr9dLOp1mcXERTdMY
      GRlB0zQcx+H27dt4vV5WV1e5d+8ezc3N+Hw+0uk0uVyOUCi0qYte0TW6PXXdArS0tJDJZFhd
      XQVgcnKSI0eOEI/HWVlZqfTirHUrHj16lJWVFSRJIhAI0NTURCAQQJIkOjs7mZqaAqC/v3/d
      3d2xsTHC4TD3798HIJPJ0NLSgmVZGIZBZ2cnKysrjI2NcfLkSfx+P6Ojo/T29jI9Pc3Q0BAL
      CwvMzc3R0tKCLMtEo1EikQgAgUCAQqFAb2+v6PHZZXUbgLWbWKVS6YkLZ8dxkGWZUCiEqqrY
      to2qqpTL5acOk5idnaVcLqPrOpIkoapqpRWBD1ulffv2AaCqKqZpkkqliMVizM3NMT8/jyRJ
      SJKELMt0d3cTCATW1dTV1YXX62V+fp4DBw5UhmPbtr3uWQVh99Ttpx4OhzFNk97eXoLBIB0d
      HQwMDDA+Pk5nZyctLS0Eg0EikQhtbW2Ypsnk5OS6I+zaE1+dnZ1ks1mOHj1KOBxmamqKQCBA
      JBKhvb2dwcFBMplMZdu2tjbi8TiKonD27FnOnDnDvn37OHLkCMPDw+Tzebq6upAkiSNHjjAy
      MsL+/fuRJImlpSV6e3spFotks1m6u7tJJpNEIhEWFhbE5GC7zBXdoOVymdHRUXRd59SpU+uO
      zFs1OztLd3f3Eze+Nsu2bWZmZjh48OCWTn/c0A3qWGWwDByzBJZB0gzg82qoikyTd3vv3xUB
      aGSNFACnlMNaGsXOzOPkFrETE9jZBRyzCLYFtgG2yb9M/D6S6kGRZTyagt+r0dMeYn9HiI6W
      AD3tIfo6m/Fon9xBUBeD4XbS2tCKUCiE3++v9CY9PgQhl8thWRahUKgyOK2lpYVkMll5RHJt
      6IKwMY5VximsYCcnMGffx1q4ib00Ao4NfPwxObOqY7D+QHl/NlH5WpLA79U41NPKZ4/uY7Cv
      nZ72EC3BJ+/IuzoAtm3zve99j87OTvbv31/p/ozH43zta1/D4/Fg2zbf/OY30TSNL3zhC8zM
      zHD//n2ef/55xsfH6evrQ1EUjh07RkdHR63f0p5n6ymsybcxHlzEig1DKVf113AcyBcNhqeW
      GZ5aRpIgEmrizKk+njvWw4ln2tHUR62DqwNQKBQYHx+vjM2fmJjg1Vdf5dvf/ja5XI5IJMKN
      GzcYHBysPMvr8/kYHR2tPMc7Pz/P6uoqk5OTfPWrX6W5ubnWb2vPcWwLK3obY/i7WHPXcVaX
      +aSjfFVf34FkVueNd8b44fvjdLUG+dUTvXzx9IC7A6CqKpFIhK985SucP38eVVVZXV2tDHOI
      x+O89957NDc3MzY2xp07d7h+/TqvvPIKHo+HH//4xwSDQTRN4+DBgyQSCRGAxzjlPObMuxgf
      vI618PNalwOAYdrMx7PM/3WWv/zJfXdfBK/dmb137x4nTpwgEolw9epVDhw4wIEDB5ibm+Pz
      n/88uVyOmzdvoqoqU1NT+P1+XnrpJVKpFIqiVB7M+eIXv4jf79+1+mFvXgQ7loH54K8o3/oz
      7KW7vzivr57fjf8bDKrzvl0dgEawlwLgODZ2coLS1T/Bmrv2qOdmB1QzAK4+BRKqx84nMD74
      FuVbfwZGodblbJgIgLBtVmyY4uV/h50Yr3UpmyYCIGyZYxYxbn2H0vX/sSPdmbtBBGAD1i6T
      xEjND9m5GKWrf4L54GKtS9mWPRcAVd1zJVVmoIhEIiIEgL26jP7mH2BHb9e6lG3bU39te/WP
      a+1BmHg8TkdHh6uHLlvxMfQ3/zVOauNP4O1l7v2f3ARJkvD7/YRCIZaXl107S5sVvY3+xj9r
      mD9+EAHYlKamJpqbm59YNskNrNhd9Df/ECcXq3UpVSUCsAmSJNHU1EQkEiGRSLimJbBzS+jf
      /xc4uWitS6k6EYAt8Hq9NDc3uyIEdi6G/oN/9YsBbI1HBGCLvF5vZTaKRp3SxCkXKF7599ix
      j15Fs96JAGyDx+OpzAxdLpdrXU5VObZF+fr/xHr4k1qXsqNEALZJ0zQ6OjpIJpMN1RJYMz+l
      /MG3al3GjhMBqIK1EKysrDRES2ClHlL8f/8BzMafslEEoEpUVaW9vZ10Ok2pVKp1OVvm2Cbl
      n/63huzxeRoRgCpSFIW2tjZSqVTdTnhrPXwHc/xKrcvYNSIAVaYoSmWqxLUlWeuFU16l9M5/
      Bqexu3YfJwKwA9amRszlcnUTAsexKd/8JnZystal7CoRgB0iyzIdHR0UCoW6CIGTjWIMn2c3
      Z2vYC0QAdpAsy7S1tVEoFCrLse5FjuNg3LuAs7pU61J2nQjADltbalXXdXK53N4MgaFj3Pm/
      ta6iJkQAdsFaCEql0p4MgTHyFzj57a1yU69EAHaJJEl0dHRQLpf3VAiccoHy7e/UuoyaEQHY
      ZW1tbetWn6k1a3kUJ7tY6zJqRgRgl0mSRHNzM7Isk0qlatoSOLaFef8HYNX/8I2tEgGoAUmS
      CIVCyLJMMpmsWQgcfQVz6q9r8tp7hQhAjUiSRDgcRtM0EonEJ2+wA6zosGsvfteIANTQWgh8
      Pl9NWgLr4dVdfb29SASgxiRJIhgM1iQE5uz7u/Zae5UIwB6wNu1KIBAgHo/vyowTdi7acDM8
      bIUIwB6xNuNEMBgkHo/v+MP21tzPwBZT0YsA7DFrE3DtdEtgJcZ2bN/1RARgD/L7/bS2tu7Y
      tCuO47hu2PNHEQHYo9bmHkomk9UPgVnCycxXd591SgRgD/N6vbS0tLC8vFzVpaMcPYVTylZt
      f/VMBGCPW5t7aHl5uWozTjjFFE6dLmhRbSIAdWBt2pVEIlGVuYecUt7V438eJwJQJzRNqzxs
      v+0QmHp1imoAIgB1ZG3uoZWVlW3NPeSU81Wsqr6JANQZRVFob28nlUqh61s8krtgxreNEgGo
      Q2tzD6XTaXRd3/T4Iae0ukOV7Y6gXL1TOBGAOiXLMvv27cM0zU0PopM8gR2sbOf9Uev/Yp+S
      rMq+RADqXCgUwu/3k0gkNj50whva2aJ2WFjWed5zvyr7EgFoAI8PottICKQ6DwDA3/W/y6C2
      /cX6RAAawNpI0nA4vKFVLCXVC+zNJWk3qkku82roDZrl7V3PiAA0kKampsrQiY8NgScIWtPu
      FbZD2uQsvxN8C5WtDxMRAWgwa2uXfdxIUsnfhuRr3uXKqk+S4HnPGC/7ryKxtaHjIgANRpIk
      fD7fx4ZAampB8rXUoLrqkyT4df81Pu2Z2NL2IgANyuPxEIlEnrqKpSTJyC37a1RZ9WmSxe8E
      36JN3vxkYyIADUzTNNrb20kkEk+MJJXbj9aoqp3RpuR4NfQGfmlzd7lFABrc46tYPh4CZf+v
      gNRY//3HPbN8xf8O0ibWOGisT0B4KlVV6ejoIJVKVU6HlI6jDdET9Mu+1HSdF7wjG/59EQCX
      WBtJuhYAyRtC6T5Z46qqT5Vs/lHwIn3Kxhb7EAFwEUVR8Pv9H/6797kaVrNzgnKR3w39EL/0
      yYPmRABcTD149lE/YgM6rC7w28FLn3h/QATAxeTIIeSO47UuY0dIEpz1DXPGO/yxvycC4GKS
      x4966MVal7Gj/n7wCv3qRy8AIgLQAGKxGK+//voTQ6ITiQSzs7MArK6uMj//5FxA6tEv1/3w
      6I8TknV+L3ThIwfNiQDUOcuyOH/+PC0tLUxPT2MYBjdv3mR0dJRUKkUsFmNhYYGLFy8yM/Pk
      8GGlbQClq/F6gx63X03wteDFpw6aEwGoc5Ik0dXVxaFDh0in00xMTPCNb3yDr3/96xSLRUzT
      5Ec/+hE9PT0oivLUfXg++w93uerdd9pzny813eCXFwJXa1OOUC2yLNPV1UVfXx/RaBSAl156
      icHBQVRVxbbtRwthGwaapj11H8rBM8j7nsWO3t7N0neVLMHLgavMmR3cMQ5Xvi85e2W9TmHL
      0uk0oVCITCZDOBxmeHgY0zQ5ceIElmWRTCaJRqMcP36c1tbWp+7DGL9E8c0/BGfn1yaopZjV
      yh+nf5sVOwyIAAi/4BgFCn/+jxu6FVhzp3yI/5T5e5io4hpAeETS/Hh/5Z+A8vTTpEbyKW2K
      3/C/h4QtAlCPHMfhvffe48qVK5imyZUrV7h79+6637l79y7xeJxYLMZ3v/tdotEot27d4tat
      WxSLReLxJ1eHVA6eRT380m69jZqRJfg7/nd53jMmAlCPRkdHSafTPPvss9y+fRufz8fw8HBl
      9fl0Os2lS5eYmJggFovxuc99jsuXLzMzM8ODBw8YGRl56jxCkizj/bXfb+j7Amu8kskroTdF
      AOpRNBrlwYMHXLx4kWQyydDQEIcPHyabzWLbNj/72c84e/YskiRx/PhxHjx4wAsvvIBlWZUb
      YufPnyeVSj2xb6n5AN5f/b2Ge1bgaYJyUXSD1qO2tjZefPFF4vE4qVSK2dlZZmdnOXz4MOVy
      mdHRUVZWVggGgxQKBYaGhujq6uLo0aO888475PN5Tp48yezs7BO9QpIkoZ36Tcy5a1jTP6nR
      O9w9oheoDlmWxVtvvYWqqpw7d44LFy7Q19fHsWPHSCaT9Pf3k06nyefz/PznP2d2dpaBgQHO
      nTtHLBYjEAhw6dIlXn75Zbxe71Nfw84nKHznH+BkF3b53e0uEQDhI5kPf4L+xj9v6OVUG/9E
      T9gype/X8LzwT0F++hCKRiACIHwkSVbwnH4F7dRv1bqUHSMCIHwsSVbwfv4PUAf/dq1L2REi
      AMInkhQPvr/5b1Ge+Ru1LqXqxEWwsGFOKUfxR/8R8/6btS6lakQAhE1xjCKlH/8xxt2/qHUp
      VSECIGyaY5Up3/jflK//KVhbX61yLxABELbMGL9M6e0/wsknal3KlokACFvmOA52aprS5dew
      Fm/WupwtEQEQts0xS5R++t8x7vwfMAq1LmdTRACEqnAcGzs2TOnd/4o1d63W5WyYCIBQVY5Z
      xLj/Q8rv/hecQnXW8t1JIgDCjnCKGcoffAtj5C9xctFal/ORRACEHWWvLmOOX8IY+R52fKzW
      5XxIklH2nxYBEHaHU85jzl3HnLiCOX4ZDJ1fnqRqx8kqUrAL7chLqEe/hNxxTARA2H1OOY9x
      7weY01exE+M4q7Gdm4/IG0IO7UPp+Qza4N9C7j6F9NjMFyIAQs04joOjr+Bk5jFnr2FFb2On
      pnGyi1t7CEeSwRNADvegdJ9E6fksyr5TSMFOJM3/9E1EAIS9wrEtsA2wytjZKHZ6DntlCkwd
      xyjilHI4pRySoiJ5Q6D6kLwhpKZW5NZnkJsPIPnbQNZA0ZA2sPiHCIDgauJ5AMHVRAAEVxMB
      EFxNBEBwNREAwdVEAARXEwEQXE0EQHA1EQDB1UQABFcTARBcTQRAcDURAMHVRAAEVxMBEFxN
      BEBwNREAwdVEAARXEwEQXE0EQHA1EQDB1UQABFcTARBcTQRAcDURAMHVRAAEVxMBEFxNBEBw
      NREAwdVEAARXEwEQXE0EQHA1EQDB1UQABFcTARBcTQRAcDURAMHVRAAEVxMBEFxNBEBwNREA
      wdVEAARXEwEQXE0EQHA1EQDB1f4/nuj3xefLyUIAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
